#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üîç TEST SIMPLE AGENT 06 - DIAGNOSTIC
Diagnostique le probl√®me de variable OPENTELEMETRY_AVAILABLE
"""

import sys
import os
from pathlib import Path

print("üîç DIAGNOSTIC AGENT 06 SPRINT 4")
print("=" * 50)

# Test import OpenTelemetry
try:
    from opentelemetry import trace, metrics
    OPENTELEMETRY_AVAILABLE = True
    print("‚úÖ OpenTelemetry import√© avec succ√®s")
except ImportError as e:
    OPENTELEMETRY_AVAILABLE = False
    print(f"‚ùå OpenTelemetry import √©chec: {e}")

print(f"üìä OPENTELEMETRY_AVAILABLE = {OPENTELEMETRY_AVAILABLE}")

# Test import des d√©pendances
print("\nüì¶ TEST D√âPENDANCES:")
dependencies = [
    "jsonschema",
    "cryptography",
    "prometheus_client"
]

for dep in dependencies:
    try:
        __import__(dep)
        print(f"‚úÖ {dep}")
    except ImportError as e:
        print(f"‚ùå {dep}: {e}")

# Test simple import Agent 06
print("\nü§ñ TEST IMPORT AGENT 06:")
try:
    # Ajouter le chemin agents
    agents_path = Path(__file__).parent / "agents"
    sys.path.insert(0, str(agents_path))
    
    # Test import minimal
    import agent_06_specialiste_monitoring_sprint4
    print("‚úÖ Agent 06 module import√©")
    
    # Test cr√©ation instance
    from agent_06_specialiste_monitoring_sprint4 import Agent06AdvancedMonitoring
    agent = Agent06AdvancedMonitoring()
    print(f"‚úÖ Agent 06 instanci√©: {agent.agent_name} v{agent.version}")
    
except Exception as e:
    print(f"‚ùå Erreur Agent 06: {e}")
    import traceback
    traceback.print_exc()

print("\nüéØ DIAGNOSTIC TERMIN√â") 