{
  "agent": "Agent Analyzer Beta - Gemini 2.5",
  "model": "gemini-2.0-flash-exp",
  "file_path": "orchestrator/app/observability/monitoring.py",
  "timestamp": "2025-06-18T14:50:20.167805",
  "patterns": [
    {
      "name": "God Class",
      "location": "line 45-150",
      "type": "ANTI_PATTERN",
      "severity": "HIGH",
      "description": "La classe `ProductionMonitoring` semble assumer trop de responsabilités. Elle gère l'initialisation des métriques core et business, les règles d'alerte, les health checks, le tracking SLA et la configuration d'alerting.  Cela viole le principe de responsabilité unique."
    },
    {
      "name": "Long Method",
      "location": "line 67-75",
      "type": "ANTI_PATTERN",
      "severity": "MEDIUM",
      "description": "La méthode `__init__` de la classe `ProductionMonitoring` est assez longue et effectue plusieurs opérations : initialisation des attributs, gestion de la disponibilité de Prometheus, initialisation des métriques core et business, et initialisation des règles d'alerte.  Cela rend la méthode difficile à lire et à maintenir. Il serait préférable de la diviser en méthodes plus petites et plus spécialisées."
    },
    {
      "name": "Large Class",
      "location": "line 45-150",
      "type": "ANTI_PATTERN",
      "severity": "MEDIUM",
      "description": "La classe `ProductionMonitoring` a un grand nombre d'attributs et de méthodes, ce qui la rend difficile à comprendre et à maintenir.  Elle pourrait bénéficier d'une refactorisation en plusieurs classes plus petites et plus spécialisées."
    },
    {
      "name": "Data Class",
      "location": "line 25-33",
      "type": "PATTERN",
      "severity": "LOW",
      "description": "La classe `CustomMetric` est principalement une classe de données (dataclass) qui stocke des informations sur une métrique. Elle a peu de logique métier en dehors de l'initialisation des buckets par défaut."
    },
    {
      "name": "Data Class",
      "location": "line 36-43",
      "type": "PATTERN",
      "severity": "LOW",
      "description": "La classe `AlertRule` est principalement une classe de données (dataclass) qui stocke des informations sur une règle d'alerte."
    }
  ],
  "functions": [
    {
      "name": "get_monitoring",
      "line_start": 659,
      "line_end": 666,
      "parameters_count": 0,
      "complexity_score": 0.35,
      "size_category": "SMALL",
      "responsibilities": []
    },
    {
      "name": "track_request_metrics",
      "line_start": 670,
      "line_end": 704,
      "parameters_count": 1,
      "complexity_score": 1.0,
      "size_category": "LARGE",
      "responsibilities": [
        "HTTP handling"
      ]
    },
    {
      "name": "__post_init__",
      "line_start": 51,
      "line_end": 54,
      "parameters_count": 1,
      "complexity_score": 0.35,
      "size_category": "SMALL",
      "responsibilities": []
    },
    {
      "name": "__init__",
      "line_start": 81,
      "line_end": 100,
      "parameters_count": 2,
      "complexity_score": 1.0,
      "size_category": "MEDIUM",
      "responsibilities": [
        "Logging"
      ]
    },
    {
      "name": "_init_core_metrics",
      "line_start": 102,
      "line_end": 169,
      "parameters_count": 1,
      "complexity_score": 1.0,
      "size_category": "HUGE",
      "responsibilities": [
        "HTTP handling"
      ]
    },
    {
      "name": "_init_business_metrics",
      "line_start": 171,
      "line_end": 215,
      "parameters_count": 1,
      "complexity_score": 1.0,
      "size_category": "LARGE",
      "responsibilities": []
    },
    {
      "name": "_create_metric",
      "line_start": 217,
      "line_end": 258,
      "parameters_count": 2,
      "complexity_score": 1.0,
      "size_category": "LARGE",
      "responsibilities": [
        "Logging"
      ]
    },
    {
      "name": "_init_alert_rules",
      "line_start": 260,
      "line_end": 338,
      "parameters_count": 1,
      "complexity_score": 1.0,
      "size_category": "HUGE",
      "responsibilities": [
        "HTTP handling",
        "Logging"
      ]
    },
    {
      "name": "increment_counter",
      "line_start": 340,
      "line_end": 349,
      "parameters_count": 4,
      "complexity_score": 1.0,
      "size_category": "SMALL",
      "responsibilities": [
        "Logging"
      ]
    },
    {
      "name": "set_gauge",
      "line_start": 351,
      "line_end": 360,
      "parameters_count": 4,
      "complexity_score": 1.0,
      "size_category": "SMALL",
      "responsibilities": [
        "Logging"
      ]
    },
    {
      "name": "observe_histogram",
      "line_start": 362,
      "line_end": 371,
      "parameters_count": 4,
      "complexity_score": 1.0,
      "size_category": "SMALL",
      "responsibilities": [
        "Logging"
      ]
    },
    {
      "name": "track_request",
      "line_start": 373,
      "line_end": 396,
      "parameters_count": 6,
      "complexity_score": 1.0,
      "size_category": "MEDIUM",
      "responsibilities": [
        "HTTP handling"
      ]
    },
    {
      "name": "track_llm_request",
      "line_start": 398,
      "line_end": 412,
      "parameters_count": 5,
      "complexity_score": 1.0,
      "size_category": "MEDIUM",
      "responsibilities": [
        "HTTP handling"
      ]
    },
    {
      "name": "track_cache_operation",
      "line_start": 414,
      "line_end": 422,
      "parameters_count": 4,
      "complexity_score": 1.0,
      "size_category": "SMALL",
      "responsibilities": []
    },
    {
      "name": "update_cache_hit_ratio",
      "line_start": 424,
      "line_end": 428,
      "parameters_count": 3,
      "complexity_score": 0.8,
      "size_category": "SMALL",
      "responsibilities": []
    },
    {
      "name": "track_user_session",
      "line_start": 430,
      "line_end": 434,
      "parameters_count": 3,
      "complexity_score": 0.8,
      "size_category": "SMALL",
      "responsibilities": []
    },
    {
      "name": "update_active_sessions",
      "line_start": 436,
      "line_end": 438,
      "parameters_count": 2,
      "complexity_score": 0.5,
      "size_category": "SMALL",
      "responsibilities": []
    },
    {
      "name": "track_security_event",
      "line_start": 440,
      "line_end": 446,
      "parameters_count": 4,
      "complexity_score": 1.0,
      "size_category": "SMALL",
      "responsibilities": []
    },
    {
      "name": "track_user_satisfaction",
      "line_start": 448,
      "line_end": 453,
      "parameters_count": 4,
      "complexity_score": 1.0,
      "size_category": "SMALL",
      "responsibilities": []
    },
    {
      "name": "update_memory_usage",
      "line_start": 455,
      "line_end": 459,
      "parameters_count": 3,
      "complexity_score": 0.8,
      "size_category": "SMALL",
      "responsibilities": []
    },
    {
      "name": "update_api_quota_usage",
      "line_start": 461,
      "line_end": 466,
      "parameters_count": 4,
      "complexity_score": 1.0,
      "size_category": "SMALL",
      "responsibilities": []
    },
    {
      "name": "add_health_check",
      "line_start": 468,
      "line_end": 470,
      "parameters_count": 3,
      "complexity_score": 0.7,
      "size_category": "SMALL",
      "responsibilities": []
    },
    {
      "name": "get_prometheus_metrics",
      "line_start": 521,
      "line_end": 530,
      "parameters_count": 1,
      "complexity_score": 0.65,
      "size_category": "SMALL",
      "responsibilities": [
        "Logging"
      ]
    },
    {
      "name": "generate_alert_rules_yaml",
      "line_start": 532,
      "line_end": 563,
      "parameters_count": 1,
      "complexity_score": 1.0,
      "size_category": "LARGE",
      "responsibilities": []
    },
    {
      "name": "generate_grafana_dashboard",
      "line_start": 565,
      "line_end": 635,
      "parameters_count": 1,
      "complexity_score": 1.0,
      "size_category": "HUGE",
      "responsibilities": [
        "HTTP handling"
      ]
    },
    {
      "name": "decorator",
      "line_start": 672,
      "line_end": 703,
      "parameters_count": 1,
      "complexity_score": 1.0,
      "size_category": "LARGE",
      "responsibilities": [
        "HTTP handling"
      ]
    }
  ],
  "classes": [
    {
      "name": "MetricType",
      "line_start": 26,
      "line_end": 31,
      "methods_count": 0,
      "attributes_count": 4,
      "god_class_score": 0.025,
      "responsibilities": [],
      "srp_violations": []
    },
    {
      "name": "AlertSeverity",
      "line_start": 34,
      "line_end": 39,
      "methods_count": 0,
      "attributes_count": 4,
      "god_class_score": 0.025,
      "responsibilities": [],
      "srp_violations": []
    },
    {
      "name": "CustomMetric",
      "line_start": 43,
      "line_end": 54,
      "methods_count": 1,
      "attributes_count": 0,
      "god_class_score": 0.12166666666666667,
      "responsibilities": [],
      "srp_violations": []
    },
    {
      "name": "AlertRule",
      "line_start": 58,
      "line_end": 68,
      "methods_count": 0,
      "attributes_count": 0,
      "god_class_score": 0.05,
      "responsibilities": [],
      "srp_violations": []
    },
    {
      "name": "ProductionMonitoring",
      "line_start": 71,
      "line_end": 652,
      "methods_count": 22,
      "attributes_count": 0,
      "god_class_score": 1.0,
      "responsibilities": [],
      "srp_violations": [
        "Too many methods (>10)"
      ]
    }
  ],
  "smells": {
    "long_methods": [
      "_init_core_metrics (line 95)",
      "_init_business_metrics (line 96)",
      "_init_alert_rules (line 97)"
    ],
    "large_classes": [
      "ProductionMonitoring (line 69)"
    ],
    "parameter_lists": [],
    "duplicate_code": [],
    "dead_code": []
  },
  "strategies": [
    {
      "target": "track_request_metrics",
      "strategy": "EXTRACT_METHOD",
      "rationale": "Fonction large (34 lignes)",
      "steps": [
        "Identifier les blocs logiques",
        "Extraire en méthodes privées",
        "Tester après extraction"
      ],
      "estimated_effort": "2-4 heures"
    },
    {
      "target": "_init_core_metrics",
      "strategy": "EXTRACT_METHOD",
      "rationale": "Fonction huge (67 lignes)",
      "steps": [
        "Identifier les blocs logiques",
        "Extraire en méthodes privées",
        "Tester après extraction"
      ],
      "estimated_effort": "2-4 heures"
    },
    {
      "target": "_init_business_metrics",
      "strategy": "EXTRACT_METHOD",
      "rationale": "Fonction large (44 lignes)",
      "steps": [
        "Identifier les blocs logiques",
        "Extraire en méthodes privées",
        "Tester après extraction"
      ],
      "estimated_effort": "2-4 heures"
    },
    {
      "target": "_create_metric",
      "strategy": "EXTRACT_METHOD",
      "rationale": "Fonction large (41 lignes)",
      "steps": [
        "Identifier les blocs logiques",
        "Extraire en méthodes privées",
        "Tester après extraction"
      ],
      "estimated_effort": "2-4 heures"
    },
    {
      "target": "_init_alert_rules",
      "strategy": "EXTRACT_METHOD",
      "rationale": "Fonction huge (78 lignes)",
      "steps": [
        "Identifier les blocs logiques",
        "Extraire en méthodes privées",
        "Tester après extraction"
      ],
      "estimated_effort": "2-4 heures"
    },
    {
      "target": "generate_alert_rules_yaml",
      "strategy": "EXTRACT_METHOD",
      "rationale": "Fonction large (31 lignes)",
      "steps": [
        "Identifier les blocs logiques",
        "Extraire en méthodes privées",
        "Tester après extraction"
      ],
      "estimated_effort": "2-4 heures"
    },
    {
      "target": "generate_grafana_dashboard",
      "strategy": "EXTRACT_METHOD",
      "rationale": "Fonction huge (70 lignes)",
      "steps": [
        "Identifier les blocs logiques",
        "Extraire en méthodes privées",
        "Tester après extraction"
      ],
      "estimated_effort": "2-4 heures"
    },
    {
      "target": "decorator",
      "strategy": "EXTRACT_METHOD",
      "rationale": "Fonction large (31 lignes)",
      "steps": [
        "Identifier les blocs logiques",
        "Extraire en méthodes privées",
        "Tester après extraction"
      ],
      "estimated_effort": "2-4 heures"
    },
    {
      "target": "ProductionMonitoring",
      "strategy": "EXTRACT_CLASS",
      "rationale": "God class (22 méthodes)",
      "steps": [
        "Grouper méthodes par responsabilité",
        "Extraire classes spécialisées",
        "Refactorer les dépendances"
      ],
      "estimated_effort": "8-16 heures"
    }
  ],
  "summary": {
    "total_patterns": 5,
    "critical_functions": 18,
    "god_classes": 1,
    "refactoring_urgency": "CRITIQUE",
    "quick_wins": 9
  }
}