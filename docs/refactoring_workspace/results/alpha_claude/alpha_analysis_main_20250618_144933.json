{
  "agent": "Agent Analyzer Alpha - Claude Sonnet 4",
  "model": "claude-3-5-sonnet-20241022",
  "file_path": "orchestrator/app/main.py",
  "timestamp": "2025-06-18T14:49:33.625799",
  "ast_analysis": {
    "functions": [
      {
        "name": "get_api_key",
        "line": 202,
        "args_count": 2,
        "is_async": false
      },
      {
        "name": "require_workflow",
        "line": 227,
        "args_count": 0,
        "is_async": false
      },
      {
        "name": "mark_as_completed",
        "line": 267,
        "args_count": 1,
        "is_async": false
      },
      {
        "name": "create_workflow",
        "line": 272,
        "args_count": 1,
        "is_async": false
      },
      {
        "name": "get_memory_optimizer",
        "line": 1567,
        "args_count": 0,
        "is_async": false
      },
      {
        "name": "get_advanced_state_manager",
        "line": 1572,
        "args_count": 0,
        "is_async": false
      },
      {
        "name": "get_advanced_coordination",
        "line": 1577,
        "args_count": 0,
        "is_async": false
      },
      {
        "name": "validate_task_description",
        "line": 239,
        "args_count": 2,
        "is_async": false
      },
      {
        "name": "validate_session_id",
        "line": 245,
        "args_count": 2,
        "is_async": false
      },
      {
        "name": "validate_code_context",
        "line": 254,
        "args_count": 2,
        "is_async": false
      },
      {
        "name": "validate_comment",
        "line": 261,
        "args_count": 2,
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "TaskRequest",
        "line": 233,
        "methods_count": 3
      },
      {
        "name": "FeedbackRequest",
        "line": 259,
        "methods_count": 1
      }
    ],
    "imports": [
      "from __future__",
      "asyncio",
      "json",
      "uuid",
      "from contextlib",
      "from datetime",
      "from typing",
      "httpx",
      "from fastapi",
      "from fastapi.responses",
      "from fastapi.security",
      "from fastapi.middleware.cors",
      "from fastapi.middleware.trustedhost",
      "from langgraph.graph",
      "from slowapi",
      "from slowapi.errors",
      "from slowapi.util",
      "from prometheus_fastapi_instrumentator",
      "from pydantic",
      "from orchestrator.app.agents.supervisor",
      "from orchestrator.app.agents.workers",
      "from orchestrator.app.agents.tools",
      "from orchestrator.app.checkpoint.api_checkpointer",
      "from orchestrator.app.config",
      "from orchestrator.app.graph.state",
      "from orchestrator.app.security.validators",
      "from orchestrator.app.security.logging",
      "from orchestrator.app.security.secrets_manager",
      "from orchestrator.app.performance.redis_cache",
      "from orchestrator.app.observability.monitoring",
      "from orchestrator.app.security.network_security",
      "from orchestrator.app.performance.database_optimizer",
      "from orchestrator.app.performance.redis_cluster_manager",
      "from orchestrator.app.performance.load_tester",
      "from orchestrator.app.observability.distributed_tracing",
      "from orchestrator.app.performance.circuit_breaker",
      "from orchestrator.app.observability.business_metrics",
      "from orchestrator.app.performance.memory_optimizer",
      "from orchestrator.app.agents.advanced_state_manager",
      "from orchestrator.app.agents.advanced_coordination",
      "from orchestrator.app.performance.load_balancer",
      "from orchestrator.app.performance.auto_scaler",
      "time",
      "os",
      "from fastapi.responses",
      "from orchestrator.app.performance.memory_optimizer",
      "from orchestrator.app.agents.advanced_state_manager",
      "from orchestrator.app.agents.advanced_coordination",
      "ipaddress",
      "from orchestrator.app.agents.advanced_state_manager",
      "from orchestrator.app.performance.load_balancer",
      "from orchestrator.app.performance.database_optimizer"
    ],
    "total_nodes": 8574
  },
  "metrics": {
    "lines_of_code": 1666,
    "cyclomatic_complexity": 50,
    "cognitive_complexity": 40,
    "nesting_depth": 5,
    "number_of_functions": 79,
    "number_of_classes": 2,
    "god_class_score": 1.0
  },
  "dependencies": {
    "imports": [
      "from __future__",
      "asyncio",
      "json",
      "uuid",
      "from contextlib",
      "from datetime",
      "from typing",
      "httpx",
      "from fastapi",
      "from fastapi.responses",
      "from fastapi.security",
      "from fastapi.middleware.cors",
      "from fastapi.middleware.trustedhost",
      "from langgraph.graph",
      "from slowapi",
      "from slowapi.errors",
      "from slowapi.util",
      "from prometheus_fastapi_instrumentator",
      "from pydantic",
      "from orchestrator.app.agents.supervisor",
      "from orchestrator.app.agents.workers",
      "from orchestrator.app.agents.tools",
      "from orchestrator.app.checkpoint.api_checkpointer",
      "from orchestrator.app.config",
      "from orchestrator.app.graph.state",
      "from orchestrator.app.security.validators",
      "from orchestrator.app.security.logging",
      "from orchestrator.app.security.secrets_manager",
      "from orchestrator.app.performance.redis_cache",
      "from orchestrator.app.observability.monitoring",
      "from orchestrator.app.security.network_security",
      "from orchestrator.app.performance.database_optimizer",
      "from orchestrator.app.performance.redis_cluster_manager",
      "from orchestrator.app.performance.load_tester",
      "from orchestrator.app.observability.distributed_tracing",
      "from orchestrator.app.performance.circuit_breaker",
      "from orchestrator.app.observability.business_metrics",
      "from orchestrator.app.performance.memory_optimizer",
      "from orchestrator.app.agents.advanced_state_manager",
      "from orchestrator.app.agents.advanced_coordination",
      "from orchestrator.app.performance.load_balancer",
      "from orchestrator.app.performance.auto_scaler",
      "time",
      "os",
      "from fastapi.responses",
      "from orchestrator.app.performance.memory_optimizer",
      "from orchestrator.app.agents.advanced_state_manager",
      "from orchestrator.app.agents.advanced_coordination",
      "ipaddress",
      "from orchestrator.app.agents.advanced_state_manager",
      "from orchestrator.app.performance.load_balancer",
      "from orchestrator.app.performance.database_optimizer"
    ],
    "internal_dependencies": [
      "orchestrator.app.agents.supervisor",
      "orchestrator.app.agents.workers",
      "orchestrator.app.agents.tools",
      "orchestrator.app.checkpoint.api_checkpointer",
      "orchestrator.app.config",
      "orchestrator.app.graph.state",
      "orchestrator.app.security.validators",
      "orchestrator.app.security.logging",
      "orchestrator.app.security.secrets_manager",
      "orchestrator.app.performance.redis_cache",
      "orchestrator.app.observability.monitoring",
      "orchestrator.app.security.network_security",
      "orchestrator.app.performance.database_optimizer",
      "orchestrator.app.performance.redis_cluster_manager",
      "orchestrator.app.performance.load_tester",
      "orchestrator.app.observability.distributed_tracing",
      "orchestrator.app.performance.circuit_breaker",
      "orchestrator.app.observability.business_metrics",
      "orchestrator.app.performance.memory_optimizer",
      "orchestrator.app.agents.advanced_state_manager",
      "orchestrator.app.agents.advanced_coordination",
      "orchestrator.app.performance.load_balancer",
      "orchestrator.app.performance.auto_scaler",
      "orchestrator.app.performance.memory_optimizer",
      "orchestrator.app.agents.advanced_state_manager",
      "orchestrator.app.agents.advanced_coordination",
      "orchestrator.app.agents.advanced_state_manager",
      "orchestrator.app.performance.load_balancer",
      "orchestrator.app.performance.database_optimizer"
    ],
    "external_dependencies": [
      "__future__",
      "asyncio",
      "json",
      "uuid",
      "contextlib",
      "datetime",
      "typing",
      "httpx",
      "fastapi",
      "fastapi.responses",
      "fastapi.security",
      "fastapi.middleware.cors",
      "fastapi.middleware.trustedhost",
      "langgraph.graph",
      "slowapi",
      "slowapi.errors",
      "slowapi.util",
      "prometheus_fastapi_instrumentator",
      "pydantic",
      "time",
      "os",
      "fastapi.responses",
      "ipaddress"
    ],
    "circular_dependencies": [
      "orchestrator.app.agents.supervisor",
      "orchestrator.app.agents.workers",
      "orchestrator.app.agents.tools",
      "orchestrator.app.checkpoint.api_checkpointer",
      "orchestrator.app.graph.state",
      "orchestrator.app.security.validators",
      "orchestrator.app.security.logging",
      "orchestrator.app.security.secrets_manager",
      "orchestrator.app.performance.redis_cache",
      "orchestrator.app.observability.monitoring",
      "orchestrator.app.security.network_security",
      "orchestrator.app.performance.database_optimizer",
      "orchestrator.app.performance.redis_cluster_manager",
      "orchestrator.app.performance.load_tester",
      "orchestrator.app.observability.distributed_tracing",
      "orchestrator.app.performance.circuit_breaker",
      "orchestrator.app.observability.business_metrics",
      "orchestrator.app.performance.memory_optimizer",
      "orchestrator.app.agents.advanced_state_manager",
      "orchestrator.app.agents.advanced_coordination",
      "orchestrator.app.performance.load_balancer",
      "orchestrator.app.performance.auto_scaler",
      "orchestrator.app.performance.memory_optimizer",
      "orchestrator.app.agents.advanced_state_manager",
      "orchestrator.app.agents.advanced_coordination",
      "orchestrator.app.agents.advanced_state_manager",
      "orchestrator.app.performance.load_balancer",
      "orchestrator.app.performance.database_optimizer"
    ],
    "coupling_score": 0.5576923076923077
  },
  "hotspots": [
    {
      "type": "analysis_error",
      "severity": "LOW",
      "description": "Invalid format specifier ' \"...\", \"location\": \"line X\", \"severity\": \"HIGH/MEDIUM/LOW\", \"description\": \"...\"' for object of type 'str'"
    }
  ],
  "recommendations": [
    {
      "priority": "HIGH",
      "type": "SPLIT_FILE",
      "description": "Fichier trop volumineux (1666 lignes)",
      "impact": "Améliore la maintenabilité",
      "effort": "4-8 heures",
      "affected_lines": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ]
    }
  ],
  "summary": {
    "god_class_score": 1.0,
    "complexity_level": "TRÈS ÉLEVÉE",
    "refactoring_priority": "CRITIQUE",
    "estimated_effort": "8-20 heures (1 sprint)"
  }
}