{
  "timestamp": "20250618_174041",
  "duration_seconds": 10.578909635543823,
  "test_generation": {
    "success": true,
    "modules_tested": 24,
    "total_tests": 81,
    "test_files": 22,
    "estimated_coverage": 92.04545454545455,
    "results_file": "refactoring_workspace\\results\\phase4_tests\\test_generation_results_20250618_174041.json",
    "analysis": {
      "modules_discovered": [
        {
          "type": "router",
          "name": "agents_router",
          "path": "refactoring_workspace\\new_architecture\\routers\\agents_router.py",
          "test_type": "integration",
          "priority": "high"
        },
        {
          "type": "router",
          "name": "cache_routes",
          "path": "refactoring_workspace\\new_architecture\\routers\\cache_routes.py",
          "test_type": "integration",
          "priority": "high"
        },
        {
          "type": "router",
          "name": "core_routes",
          "path": "refactoring_workspace\\new_architecture\\routers\\core_routes.py",
          "test_type": "integration",
          "priority": "high"
        },
        {
          "type": "router",
          "name": "database_routes",
          "path": "refactoring_workspace\\new_architecture\\routers\\database_routes.py",
          "test_type": "integration",
          "priority": "high"
        },
        {
          "type": "router",
          "name": "health_router",
          "path": "refactoring_workspace\\new_architecture\\routers\\health_router.py",
          "test_type": "integration",
          "priority": "high"
        },
        {
          "type": "router",
          "name": "monitoring_routes",
          "path": "refactoring_workspace\\new_architecture\\routers\\monitoring_routes.py",
          "test_type": "integration",
          "priority": "high"
        },
        {
          "type": "router",
          "name": "orchestration_router",
          "path": "refactoring_workspace\\new_architecture\\routers\\orchestration_router.py",
          "test_type": "integration",
          "priority": "high"
        },
        {
          "type": "router",
          "name": "performance_routes",
          "path": "refactoring_workspace\\new_architecture\\routers\\performance_routes.py",
          "test_type": "integration",
          "priority": "high"
        },
        {
          "type": "router",
          "name": "security_routes",
          "path": "refactoring_workspace\\new_architecture\\routers\\security_routes.py",
          "test_type": "integration",
          "priority": "high"
        },
        {
          "type": "router",
          "name": "__init__",
          "path": "refactoring_workspace\\new_architecture\\routers\\__init__.py",
          "test_type": "integration",
          "priority": "high"
        },
        {
          "type": "service",
          "name": "agentservice",
          "path": "refactoring_workspace\\new_architecture\\services\\agentservice.py",
          "test_type": "unit",
          "priority": "critical"
        },
        {
          "type": "service",
          "name": "cache_service",
          "path": "refactoring_workspace\\new_architecture\\services\\cache_service.py",
          "test_type": "unit",
          "priority": "critical"
        },
        {
          "type": "service",
          "name": "core_service",
          "path": "refactoring_workspace\\new_architecture\\services\\core_service.py",
          "test_type": "unit",
          "priority": "critical"
        },
        {
          "type": "service",
          "name": "database_service",
          "path": "refactoring_workspace\\new_architecture\\services\\database_service.py",
          "test_type": "unit",
          "priority": "critical"
        },
        {
          "type": "service",
          "name": "healthservice",
          "path": "refactoring_workspace\\new_architecture\\services\\healthservice.py",
          "test_type": "unit",
          "priority": "critical"
        },
        {
          "type": "service",
          "name": "monitoring_service",
          "path": "refactoring_workspace\\new_architecture\\services\\monitoring_service.py",
          "test_type": "unit",
          "priority": "critical"
        },
        {
          "type": "service",
          "name": "orchestratorservice",
          "path": "refactoring_workspace\\new_architecture\\services\\orchestratorservice.py",
          "test_type": "unit",
          "priority": "critical"
        },
        {
          "type": "service",
          "name": "performance_service",
          "path": "refactoring_workspace\\new_architecture\\services\\performance_service.py",
          "test_type": "unit",
          "priority": "critical"
        },
        {
          "type": "service",
          "name": "security_service",
          "path": "refactoring_workspace\\new_architecture\\services\\security_service.py",
          "test_type": "unit",
          "priority": "critical"
        },
        {
          "type": "service",
          "name": "__init__",
          "path": "refactoring_workspace\\new_architecture\\services\\__init__.py",
          "test_type": "unit",
          "priority": "critical"
        },
        {
          "type": "dependency",
          "name": "auth_deps",
          "path": "refactoring_workspace\\new_architecture\\dependencies\\auth_deps.py",
          "test_type": "unit",
          "priority": "medium"
        },
        {
          "type": "dependency",
          "name": "core_deps",
          "path": "refactoring_workspace\\new_architecture\\dependencies\\core_deps.py",
          "test_type": "unit",
          "priority": "medium"
        },
        {
          "type": "dependency",
          "name": "database_deps",
          "path": "refactoring_workspace\\new_architecture\\dependencies\\database_deps.py",
          "test_type": "unit",
          "priority": "medium"
        },
        {
          "type": "dependency",
          "name": "__init__",
          "path": "refactoring_workspace\\new_architecture\\dependencies\\__init__.py",
          "test_type": "unit",
          "priority": "medium"
        }
      ],
      "patterns_detected": [
        "hexagonal_architecture",
        "cqrs",
        "repository_pattern"
      ],
      "test_complexity": "medium",
      "dependencies_map": {
        "main": [
          "fastapi",
          "fastapi.middleware.cors",
          "contextlib",
          "routers",
          "dependencies",
          "services",
          "config"
        ],
        "auth_deps": [],
        "core_deps": [],
        "database_deps": [],
        "cache_repository": [
          "typing",
          "base_repository"
        ],
        "database_repository": [
          "typing",
          "base_repository"
        ],
        "monitoring_repository": [
          "typing",
          "base_repository"
        ],
        "agents_router": [
          "fastapi",
          "typing",
          "dependencies",
          "services",
          "schemas"
        ],
        "cache_routes": [
          "fastapi",
          "typing"
        ],
        "core_routes": [
          "fastapi",
          "typing"
        ],
        "database_routes": [
          "fastapi",
          "typing"
        ],
        "health_router": [
          "fastapi",
          "typing",
          "dependencies",
          "services",
          "schemas"
        ],
        "monitoring_routes": [
          "fastapi",
          "typing"
        ],
        "orchestration_router": [
          "fastapi",
          "typing",
          "dependencies",
          "services",
          "schemas"
        ],
        "performance_routes": [
          "fastapi",
          "typing"
        ],
        "security_routes": [
          "fastapi",
          "typing"
        ],
        "core_schemas": [
          "pydantic",
          "typing"
        ],
        "database_schemas": [
          "pydantic",
          "typing"
        ],
        "monitoring_schemas": [
          "pydantic",
          "typing"
        ],
        "security_schemas": [
          "pydantic",
          "typing"
        ],
        "agentservice": [
          "abc",
          "typing",
          "dataclasses",
          "repositories.interfaces",
          "schemas.commands",
          "schemas.queries"
        ],
        "cache_service": [
          "typing",
          "base_service"
        ],
        "core_service": [
          "typing",
          "base_service"
        ],
        "database_service": [
          "typing",
          "base_service"
        ],
        "healthservice": [
          "abc",
          "typing",
          "dataclasses",
          "repositories.interfaces",
          "schemas.commands",
          "schemas.queries"
        ],
        "monitoring_service": [
          "typing",
          "base_service"
        ],
        "orchestratorservice": [
          "abc",
          "typing",
          "dataclasses",
          "repositories.interfaces",
          "schemas.commands",
          "schemas.queries"
        ],
        "performance_service": [
          "typing",
          "base_service"
        ],
        "security_service": [
          "typing",
          "base_service"
        ],
        "iagentservice": [
          "abc",
          "typing"
        ],
        "ihealthservice": [
          "abc",
          "typing"
        ],
        "iorchestratorservice": [
          "abc",
          "typing"
        ]
      },
      "test_priorities": [
        {
          "module": "agentservice",
          "priority_score": 12,
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "cache_service",
          "priority_score": 12,
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "core_service",
          "priority_score": 12,
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "database_service",
          "priority_score": 12,
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "healthservice",
          "priority_score": 12,
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "monitoring_service",
          "priority_score": 12,
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "orchestratorservice",
          "priority_score": 12,
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "performance_service",
          "priority_score": 12,
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "security_service",
          "priority_score": 12,
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "__init__",
          "priority_score": 12,
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "agents_router",
          "priority_score": 10,
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "cache_routes",
          "priority_score": 10,
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "core_routes",
          "priority_score": 10,
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "database_routes",
          "priority_score": 10,
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "health_router",
          "priority_score": 10,
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "monitoring_routes",
          "priority_score": 10,
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "orchestration_router",
          "priority_score": 10,
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "performance_routes",
          "priority_score": 10,
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "security_routes",
          "priority_score": 10,
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "__init__",
          "priority_score": 10,
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "estimated_effort": "high"
        },
        {
          "module": "auth_deps",
          "priority_score": 8,
          "test_types": [
            "unit",
            "integration"
          ],
          "estimated_effort": "medium"
        },
        {
          "module": "core_deps",
          "priority_score": 8,
          "test_types": [
            "unit",
            "integration"
          ],
          "estimated_effort": "medium"
        },
        {
          "module": "database_deps",
          "priority_score": 8,
          "test_types": [
            "unit",
            "integration"
          ],
          "estimated_effort": "medium"
        },
        {
          "module": "__init__",
          "priority_score": 8,
          "test_types": [
            "unit",
            "integration"
          ],
          "estimated_effort": "medium"
        }
      ]
    },
    "test_suite": {
      "test_files": [
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_agents_router.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_cache_routes.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_core_routes.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_database_routes.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_health_router.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_monitoring_routes.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_orchestration_router.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_performance_routes.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_security_routes.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test___init__.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_agentservice.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_cache_service.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_core_service.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_database_service.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_healthservice.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_monitoring_service.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_orchestratorservice.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_performance_service.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_security_service.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_auth_deps.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_core_deps.py",
        "refactoring_workspace\\results\\phase4_tests\\generated_tests\\test_database_deps.py"
      ],
      "test_plans": {
        "agents_router": {
          "module_name": "agents_router",
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "test_cases": [
            {
              "name": "test_agents_router_endpoints_status",
              "type": "integration",
              "description": "Test status codes endpoints agents_router",
              "assertions": [
                "status_200",
                "status_404",
                "status_500"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_agents_router_request_validation",
              "type": "integration",
              "description": "Test validation requests agents_router",
              "assertions": [
                "valid_requests",
                "invalid_requests",
                "error_responses"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_agents_router_response_format",
              "type": "integration",
              "description": "Test format responses agents_router",
              "assertions": [
                "json_schema",
                "headers",
                "content_type"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_agents_router_performance_load",
              "type": "performance",
              "description": "Test charge agents_router",
              "assertions": [
                "response_time_p95",
                "throughput",
                "memory_usage"
              ],
              "config": {
                "concurrent_users": 100,
                "duration": "30s"
              }
            }
          ],
          "coverage_target": 90.0,
          "dependencies": [
            "fastapi",
            "typing",
            "dependencies",
            "services",
            "schemas"
          ],
          "mock_requirements": [
            "services",
            "authentication",
            "authorization"
          ],
          "performance_metrics": {
            "response_time_p95": "< 200ms",
            "throughput": "> 1000 req/s",
            "memory_usage": "< 512MB",
            "cpu_usage": "< 80%"
          }
        },
        "cache_routes": {
          "module_name": "cache_routes",
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "test_cases": [
            {
              "name": "test_cache_routes_endpoints_status",
              "type": "integration",
              "description": "Test status codes endpoints cache_routes",
              "assertions": [
                "status_200",
                "status_404",
                "status_500"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_cache_routes_request_validation",
              "type": "integration",
              "description": "Test validation requests cache_routes",
              "assertions": [
                "valid_requests",
                "invalid_requests",
                "error_responses"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_cache_routes_response_format",
              "type": "integration",
              "description": "Test format responses cache_routes",
              "assertions": [
                "json_schema",
                "headers",
                "content_type"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_cache_routes_performance_load",
              "type": "performance",
              "description": "Test charge cache_routes",
              "assertions": [
                "response_time_p95",
                "throughput",
                "memory_usage"
              ],
              "config": {
                "concurrent_users": 100,
                "duration": "30s"
              }
            }
          ],
          "coverage_target": 90.0,
          "dependencies": [
            "fastapi",
            "typing"
          ],
          "mock_requirements": [
            "services",
            "authentication",
            "authorization"
          ],
          "performance_metrics": {
            "response_time_p95": "< 200ms",
            "throughput": "> 1000 req/s",
            "memory_usage": "< 512MB",
            "cpu_usage": "< 80%"
          }
        },
        "core_routes": {
          "module_name": "core_routes",
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "test_cases": [
            {
              "name": "test_core_routes_endpoints_status",
              "type": "integration",
              "description": "Test status codes endpoints core_routes",
              "assertions": [
                "status_200",
                "status_404",
                "status_500"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_core_routes_request_validation",
              "type": "integration",
              "description": "Test validation requests core_routes",
              "assertions": [
                "valid_requests",
                "invalid_requests",
                "error_responses"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_core_routes_response_format",
              "type": "integration",
              "description": "Test format responses core_routes",
              "assertions": [
                "json_schema",
                "headers",
                "content_type"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_core_routes_performance_load",
              "type": "performance",
              "description": "Test charge core_routes",
              "assertions": [
                "response_time_p95",
                "throughput",
                "memory_usage"
              ],
              "config": {
                "concurrent_users": 100,
                "duration": "30s"
              }
            }
          ],
          "coverage_target": 90.0,
          "dependencies": [
            "fastapi",
            "typing"
          ],
          "mock_requirements": [
            "services",
            "authentication",
            "authorization"
          ],
          "performance_metrics": {
            "response_time_p95": "< 200ms",
            "throughput": "> 1000 req/s",
            "memory_usage": "< 512MB",
            "cpu_usage": "< 80%"
          }
        },
        "database_routes": {
          "module_name": "database_routes",
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "test_cases": [
            {
              "name": "test_database_routes_endpoints_status",
              "type": "integration",
              "description": "Test status codes endpoints database_routes",
              "assertions": [
                "status_200",
                "status_404",
                "status_500"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_database_routes_request_validation",
              "type": "integration",
              "description": "Test validation requests database_routes",
              "assertions": [
                "valid_requests",
                "invalid_requests",
                "error_responses"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_database_routes_response_format",
              "type": "integration",
              "description": "Test format responses database_routes",
              "assertions": [
                "json_schema",
                "headers",
                "content_type"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_database_routes_performance_load",
              "type": "performance",
              "description": "Test charge database_routes",
              "assertions": [
                "response_time_p95",
                "throughput",
                "memory_usage"
              ],
              "config": {
                "concurrent_users": 100,
                "duration": "30s"
              }
            }
          ],
          "coverage_target": 90.0,
          "dependencies": [
            "fastapi",
            "typing"
          ],
          "mock_requirements": [
            "services",
            "authentication",
            "authorization"
          ],
          "performance_metrics": {
            "response_time_p95": "< 200ms",
            "throughput": "> 1000 req/s",
            "memory_usage": "< 512MB",
            "cpu_usage": "< 80%"
          }
        },
        "health_router": {
          "module_name": "health_router",
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "test_cases": [
            {
              "name": "test_health_router_endpoints_status",
              "type": "integration",
              "description": "Test status codes endpoints health_router",
              "assertions": [
                "status_200",
                "status_404",
                "status_500"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_health_router_request_validation",
              "type": "integration",
              "description": "Test validation requests health_router",
              "assertions": [
                "valid_requests",
                "invalid_requests",
                "error_responses"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_health_router_response_format",
              "type": "integration",
              "description": "Test format responses health_router",
              "assertions": [
                "json_schema",
                "headers",
                "content_type"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_health_router_performance_load",
              "type": "performance",
              "description": "Test charge health_router",
              "assertions": [
                "response_time_p95",
                "throughput",
                "memory_usage"
              ],
              "config": {
                "concurrent_users": 100,
                "duration": "30s"
              }
            }
          ],
          "coverage_target": 90.0,
          "dependencies": [
            "fastapi",
            "typing",
            "dependencies",
            "services",
            "schemas"
          ],
          "mock_requirements": [
            "services",
            "authentication",
            "authorization"
          ],
          "performance_metrics": {
            "response_time_p95": "< 200ms",
            "throughput": "> 1000 req/s",
            "memory_usage": "< 512MB",
            "cpu_usage": "< 80%"
          }
        },
        "monitoring_routes": {
          "module_name": "monitoring_routes",
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "test_cases": [
            {
              "name": "test_monitoring_routes_endpoints_status",
              "type": "integration",
              "description": "Test status codes endpoints monitoring_routes",
              "assertions": [
                "status_200",
                "status_404",
                "status_500"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_monitoring_routes_request_validation",
              "type": "integration",
              "description": "Test validation requests monitoring_routes",
              "assertions": [
                "valid_requests",
                "invalid_requests",
                "error_responses"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_monitoring_routes_response_format",
              "type": "integration",
              "description": "Test format responses monitoring_routes",
              "assertions": [
                "json_schema",
                "headers",
                "content_type"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_monitoring_routes_performance_load",
              "type": "performance",
              "description": "Test charge monitoring_routes",
              "assertions": [
                "response_time_p95",
                "throughput",
                "memory_usage"
              ],
              "config": {
                "concurrent_users": 100,
                "duration": "30s"
              }
            }
          ],
          "coverage_target": 90.0,
          "dependencies": [
            "fastapi",
            "typing"
          ],
          "mock_requirements": [
            "services",
            "authentication",
            "authorization"
          ],
          "performance_metrics": {
            "response_time_p95": "< 200ms",
            "throughput": "> 1000 req/s",
            "memory_usage": "< 512MB",
            "cpu_usage": "< 80%"
          }
        },
        "orchestration_router": {
          "module_name": "orchestration_router",
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "test_cases": [
            {
              "name": "test_orchestration_router_endpoints_status",
              "type": "integration",
              "description": "Test status codes endpoints orchestration_router",
              "assertions": [
                "status_200",
                "status_404",
                "status_500"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_orchestration_router_request_validation",
              "type": "integration",
              "description": "Test validation requests orchestration_router",
              "assertions": [
                "valid_requests",
                "invalid_requests",
                "error_responses"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_orchestration_router_response_format",
              "type": "integration",
              "description": "Test format responses orchestration_router",
              "assertions": [
                "json_schema",
                "headers",
                "content_type"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_orchestration_router_performance_load",
              "type": "performance",
              "description": "Test charge orchestration_router",
              "assertions": [
                "response_time_p95",
                "throughput",
                "memory_usage"
              ],
              "config": {
                "concurrent_users": 100,
                "duration": "30s"
              }
            }
          ],
          "coverage_target": 90.0,
          "dependencies": [
            "fastapi",
            "typing",
            "dependencies",
            "services",
            "schemas"
          ],
          "mock_requirements": [
            "services",
            "authentication",
            "authorization"
          ],
          "performance_metrics": {
            "response_time_p95": "< 200ms",
            "throughput": "> 1000 req/s",
            "memory_usage": "< 512MB",
            "cpu_usage": "< 80%"
          }
        },
        "performance_routes": {
          "module_name": "performance_routes",
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "test_cases": [
            {
              "name": "test_performance_routes_endpoints_status",
              "type": "integration",
              "description": "Test status codes endpoints performance_routes",
              "assertions": [
                "status_200",
                "status_404",
                "status_500"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_performance_routes_request_validation",
              "type": "integration",
              "description": "Test validation requests performance_routes",
              "assertions": [
                "valid_requests",
                "invalid_requests",
                "error_responses"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_performance_routes_response_format",
              "type": "integration",
              "description": "Test format responses performance_routes",
              "assertions": [
                "json_schema",
                "headers",
                "content_type"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_performance_routes_performance_load",
              "type": "performance",
              "description": "Test charge performance_routes",
              "assertions": [
                "response_time_p95",
                "throughput",
                "memory_usage"
              ],
              "config": {
                "concurrent_users": 100,
                "duration": "30s"
              }
            }
          ],
          "coverage_target": 90.0,
          "dependencies": [
            "fastapi",
            "typing"
          ],
          "mock_requirements": [
            "services",
            "authentication",
            "authorization"
          ],
          "performance_metrics": {
            "response_time_p95": "< 200ms",
            "throughput": "> 1000 req/s",
            "memory_usage": "< 512MB",
            "cpu_usage": "< 80%"
          }
        },
        "security_routes": {
          "module_name": "security_routes",
          "test_types": [
            "unit",
            "integration",
            "performance"
          ],
          "test_cases": [
            {
              "name": "test_security_routes_endpoints_status",
              "type": "integration",
              "description": "Test status codes endpoints security_routes",
              "assertions": [
                "status_200",
                "status_404",
                "status_500"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_security_routes_request_validation",
              "type": "integration",
              "description": "Test validation requests security_routes",
              "assertions": [
                "valid_requests",
                "invalid_requests",
                "error_responses"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_security_routes_response_format",
              "type": "integration",
              "description": "Test format responses security_routes",
              "assertions": [
                "json_schema",
                "headers",
                "content_type"
              ],
              "setup": [
                "test_client",
                "mock_services"
              ]
            },
            {
              "name": "test_security_routes_performance_load",
              "type": "performance",
              "description": "Test charge security_routes",
              "assertions": [
                "response_time_p95",
                "throughput",
                "memory_usage"
              ],
              "config": {
                "concurrent_users": 100,
                "duration": "30s"
              }
            }
          ],
          "coverage_target": 90.0,
          "dependencies": [
            "fastapi",
            "typing"
          ],
          "mock_requirements": [
            "services",
            "authentication",
            "authorization"
          ],
          "performance_metrics": {
            "response_time_p95": "< 200ms",
            "throughput": "> 1000 req/s",
            "memory_usage": "< 512MB",
            "cpu_usage": "< 80%"
          }
        },
        "__init__": {
          "module_name": "__init__",
          "test_types": [
            "unit",
            "integration"
          ],
          "test_cases": [],
          "coverage_target": 90.0,
          "dependencies": [],
          "mock_requirements": [
            "logging",
            "configuration"
          ],
          "performance_metrics": {}
        },
        "agentservice": {
          "module_name": "agentservice",
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "test_cases": [
            {
              "name": "test_agentservice_initialization",
              "type": "unit",
              "description": "Test initialisation agentservice",
              "assertions": [
                "instance_creation",
                "dependencies_injection"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_agentservice_core_operations",
              "type": "unit",
              "description": "Test opérations principales agentservice",
              "assertions": [
                "return_values",
                "state_changes",
                "side_effects"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_agentservice_error_handling",
              "type": "unit",
              "description": "Test gestion erreurs agentservice",
              "assertions": [
                "exception_types",
                "error_messages",
                "rollback"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_agentservice_command_handling",
              "type": "unit",
              "description": "Test commands CQRS agentservice",
              "assertions": [
                "command_validation",
                "state_mutation",
                "events"
              ],
              "mocks": [
                "event_store",
                "command_bus"
              ]
            },
            {
              "name": "test_agentservice_query_handling",
              "type": "unit",
              "description": "Test queries CQRS agentservice",
              "assertions": [
                "query_results",
                "no_side_effects",
                "caching"
              ],
              "mocks": [
                "read_model",
                "query_bus"
              ]
            }
          ],
          "coverage_target": 95.0,
          "dependencies": [
            "abc",
            "typing",
            "dataclasses",
            "repositories.interfaces",
            "schemas.commands",
            "schemas.queries"
          ],
          "mock_requirements": [
            "database",
            "cache",
            "external_apis"
          ],
          "performance_metrics": {}
        },
        "cache_service": {
          "module_name": "cache_service",
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "test_cases": [
            {
              "name": "test_cache_service_initialization",
              "type": "unit",
              "description": "Test initialisation cache_service",
              "assertions": [
                "instance_creation",
                "dependencies_injection"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_cache_service_core_operations",
              "type": "unit",
              "description": "Test opérations principales cache_service",
              "assertions": [
                "return_values",
                "state_changes",
                "side_effects"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_cache_service_error_handling",
              "type": "unit",
              "description": "Test gestion erreurs cache_service",
              "assertions": [
                "exception_types",
                "error_messages",
                "rollback"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_cache_service_command_handling",
              "type": "unit",
              "description": "Test commands CQRS cache_service",
              "assertions": [
                "command_validation",
                "state_mutation",
                "events"
              ],
              "mocks": [
                "event_store",
                "command_bus"
              ]
            },
            {
              "name": "test_cache_service_query_handling",
              "type": "unit",
              "description": "Test queries CQRS cache_service",
              "assertions": [
                "query_results",
                "no_side_effects",
                "caching"
              ],
              "mocks": [
                "read_model",
                "query_bus"
              ]
            }
          ],
          "coverage_target": 95.0,
          "dependencies": [
            "typing",
            "base_service"
          ],
          "mock_requirements": [
            "database",
            "cache",
            "external_apis"
          ],
          "performance_metrics": {}
        },
        "core_service": {
          "module_name": "core_service",
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "test_cases": [
            {
              "name": "test_core_service_initialization",
              "type": "unit",
              "description": "Test initialisation core_service",
              "assertions": [
                "instance_creation",
                "dependencies_injection"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_core_service_core_operations",
              "type": "unit",
              "description": "Test opérations principales core_service",
              "assertions": [
                "return_values",
                "state_changes",
                "side_effects"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_core_service_error_handling",
              "type": "unit",
              "description": "Test gestion erreurs core_service",
              "assertions": [
                "exception_types",
                "error_messages",
                "rollback"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_core_service_command_handling",
              "type": "unit",
              "description": "Test commands CQRS core_service",
              "assertions": [
                "command_validation",
                "state_mutation",
                "events"
              ],
              "mocks": [
                "event_store",
                "command_bus"
              ]
            },
            {
              "name": "test_core_service_query_handling",
              "type": "unit",
              "description": "Test queries CQRS core_service",
              "assertions": [
                "query_results",
                "no_side_effects",
                "caching"
              ],
              "mocks": [
                "read_model",
                "query_bus"
              ]
            }
          ],
          "coverage_target": 95.0,
          "dependencies": [
            "typing",
            "base_service"
          ],
          "mock_requirements": [
            "database",
            "cache",
            "external_apis"
          ],
          "performance_metrics": {}
        },
        "database_service": {
          "module_name": "database_service",
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "test_cases": [
            {
              "name": "test_database_service_initialization",
              "type": "unit",
              "description": "Test initialisation database_service",
              "assertions": [
                "instance_creation",
                "dependencies_injection"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_database_service_core_operations",
              "type": "unit",
              "description": "Test opérations principales database_service",
              "assertions": [
                "return_values",
                "state_changes",
                "side_effects"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_database_service_error_handling",
              "type": "unit",
              "description": "Test gestion erreurs database_service",
              "assertions": [
                "exception_types",
                "error_messages",
                "rollback"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_database_service_command_handling",
              "type": "unit",
              "description": "Test commands CQRS database_service",
              "assertions": [
                "command_validation",
                "state_mutation",
                "events"
              ],
              "mocks": [
                "event_store",
                "command_bus"
              ]
            },
            {
              "name": "test_database_service_query_handling",
              "type": "unit",
              "description": "Test queries CQRS database_service",
              "assertions": [
                "query_results",
                "no_side_effects",
                "caching"
              ],
              "mocks": [
                "read_model",
                "query_bus"
              ]
            }
          ],
          "coverage_target": 95.0,
          "dependencies": [
            "typing",
            "base_service"
          ],
          "mock_requirements": [
            "database",
            "cache",
            "external_apis"
          ],
          "performance_metrics": {}
        },
        "healthservice": {
          "module_name": "healthservice",
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "test_cases": [
            {
              "name": "test_healthservice_initialization",
              "type": "unit",
              "description": "Test initialisation healthservice",
              "assertions": [
                "instance_creation",
                "dependencies_injection"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_healthservice_core_operations",
              "type": "unit",
              "description": "Test opérations principales healthservice",
              "assertions": [
                "return_values",
                "state_changes",
                "side_effects"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_healthservice_error_handling",
              "type": "unit",
              "description": "Test gestion erreurs healthservice",
              "assertions": [
                "exception_types",
                "error_messages",
                "rollback"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_healthservice_command_handling",
              "type": "unit",
              "description": "Test commands CQRS healthservice",
              "assertions": [
                "command_validation",
                "state_mutation",
                "events"
              ],
              "mocks": [
                "event_store",
                "command_bus"
              ]
            },
            {
              "name": "test_healthservice_query_handling",
              "type": "unit",
              "description": "Test queries CQRS healthservice",
              "assertions": [
                "query_results",
                "no_side_effects",
                "caching"
              ],
              "mocks": [
                "read_model",
                "query_bus"
              ]
            }
          ],
          "coverage_target": 95.0,
          "dependencies": [
            "abc",
            "typing",
            "dataclasses",
            "repositories.interfaces",
            "schemas.commands",
            "schemas.queries"
          ],
          "mock_requirements": [
            "database",
            "cache",
            "external_apis"
          ],
          "performance_metrics": {}
        },
        "monitoring_service": {
          "module_name": "monitoring_service",
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "test_cases": [
            {
              "name": "test_monitoring_service_initialization",
              "type": "unit",
              "description": "Test initialisation monitoring_service",
              "assertions": [
                "instance_creation",
                "dependencies_injection"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_monitoring_service_core_operations",
              "type": "unit",
              "description": "Test opérations principales monitoring_service",
              "assertions": [
                "return_values",
                "state_changes",
                "side_effects"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_monitoring_service_error_handling",
              "type": "unit",
              "description": "Test gestion erreurs monitoring_service",
              "assertions": [
                "exception_types",
                "error_messages",
                "rollback"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_monitoring_service_command_handling",
              "type": "unit",
              "description": "Test commands CQRS monitoring_service",
              "assertions": [
                "command_validation",
                "state_mutation",
                "events"
              ],
              "mocks": [
                "event_store",
                "command_bus"
              ]
            },
            {
              "name": "test_monitoring_service_query_handling",
              "type": "unit",
              "description": "Test queries CQRS monitoring_service",
              "assertions": [
                "query_results",
                "no_side_effects",
                "caching"
              ],
              "mocks": [
                "read_model",
                "query_bus"
              ]
            }
          ],
          "coverage_target": 95.0,
          "dependencies": [
            "typing",
            "base_service"
          ],
          "mock_requirements": [
            "database",
            "cache",
            "external_apis"
          ],
          "performance_metrics": {}
        },
        "orchestratorservice": {
          "module_name": "orchestratorservice",
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "test_cases": [
            {
              "name": "test_orchestratorservice_initialization",
              "type": "unit",
              "description": "Test initialisation orchestratorservice",
              "assertions": [
                "instance_creation",
                "dependencies_injection"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_orchestratorservice_core_operations",
              "type": "unit",
              "description": "Test opérations principales orchestratorservice",
              "assertions": [
                "return_values",
                "state_changes",
                "side_effects"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_orchestratorservice_error_handling",
              "type": "unit",
              "description": "Test gestion erreurs orchestratorservice",
              "assertions": [
                "exception_types",
                "error_messages",
                "rollback"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_orchestratorservice_command_handling",
              "type": "unit",
              "description": "Test commands CQRS orchestratorservice",
              "assertions": [
                "command_validation",
                "state_mutation",
                "events"
              ],
              "mocks": [
                "event_store",
                "command_bus"
              ]
            },
            {
              "name": "test_orchestratorservice_query_handling",
              "type": "unit",
              "description": "Test queries CQRS orchestratorservice",
              "assertions": [
                "query_results",
                "no_side_effects",
                "caching"
              ],
              "mocks": [
                "read_model",
                "query_bus"
              ]
            }
          ],
          "coverage_target": 95.0,
          "dependencies": [
            "abc",
            "typing",
            "dataclasses",
            "repositories.interfaces",
            "schemas.commands",
            "schemas.queries"
          ],
          "mock_requirements": [
            "database",
            "cache",
            "external_apis"
          ],
          "performance_metrics": {}
        },
        "performance_service": {
          "module_name": "performance_service",
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "test_cases": [
            {
              "name": "test_performance_service_initialization",
              "type": "unit",
              "description": "Test initialisation performance_service",
              "assertions": [
                "instance_creation",
                "dependencies_injection"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_performance_service_core_operations",
              "type": "unit",
              "description": "Test opérations principales performance_service",
              "assertions": [
                "return_values",
                "state_changes",
                "side_effects"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_performance_service_error_handling",
              "type": "unit",
              "description": "Test gestion erreurs performance_service",
              "assertions": [
                "exception_types",
                "error_messages",
                "rollback"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_performance_service_command_handling",
              "type": "unit",
              "description": "Test commands CQRS performance_service",
              "assertions": [
                "command_validation",
                "state_mutation",
                "events"
              ],
              "mocks": [
                "event_store",
                "command_bus"
              ]
            },
            {
              "name": "test_performance_service_query_handling",
              "type": "unit",
              "description": "Test queries CQRS performance_service",
              "assertions": [
                "query_results",
                "no_side_effects",
                "caching"
              ],
              "mocks": [
                "read_model",
                "query_bus"
              ]
            }
          ],
          "coverage_target": 95.0,
          "dependencies": [
            "typing",
            "base_service"
          ],
          "mock_requirements": [
            "database",
            "cache",
            "external_apis"
          ],
          "performance_metrics": {}
        },
        "security_service": {
          "module_name": "security_service",
          "test_types": [
            "unit",
            "integration",
            "mutation"
          ],
          "test_cases": [
            {
              "name": "test_security_service_initialization",
              "type": "unit",
              "description": "Test initialisation security_service",
              "assertions": [
                "instance_creation",
                "dependencies_injection"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_security_service_core_operations",
              "type": "unit",
              "description": "Test opérations principales security_service",
              "assertions": [
                "return_values",
                "state_changes",
                "side_effects"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_security_service_error_handling",
              "type": "unit",
              "description": "Test gestion erreurs security_service",
              "assertions": [
                "exception_types",
                "error_messages",
                "rollback"
              ],
              "mocks": [
                "database",
                "external_apis"
              ]
            },
            {
              "name": "test_security_service_command_handling",
              "type": "unit",
              "description": "Test commands CQRS security_service",
              "assertions": [
                "command_validation",
                "state_mutation",
                "events"
              ],
              "mocks": [
                "event_store",
                "command_bus"
              ]
            },
            {
              "name": "test_security_service_query_handling",
              "type": "unit",
              "description": "Test queries CQRS security_service",
              "assertions": [
                "query_results",
                "no_side_effects",
                "caching"
              ],
              "mocks": [
                "read_model",
                "query_bus"
              ]
            }
          ],
          "coverage_target": 95.0,
          "dependencies": [
            "typing",
            "base_service"
          ],
          "mock_requirements": [
            "database",
            "cache",
            "external_apis"
          ],
          "performance_metrics": {}
        },
        "auth_deps": {
          "module_name": "auth_deps",
          "test_types": [
            "unit",
            "integration"
          ],
          "test_cases": [],
          "coverage_target": 90.0,
          "dependencies": [],
          "mock_requirements": [
            "logging",
            "configuration"
          ],
          "performance_metrics": {}
        },
        "core_deps": {
          "module_name": "core_deps",
          "test_types": [
            "unit",
            "integration"
          ],
          "test_cases": [],
          "coverage_target": 90.0,
          "dependencies": [],
          "mock_requirements": [
            "logging",
            "configuration"
          ],
          "performance_metrics": {}
        },
        "database_deps": {
          "module_name": "database_deps",
          "test_types": [
            "unit",
            "integration"
          ],
          "test_cases": [],
          "coverage_target": 90.0,
          "dependencies": [],
          "mock_requirements": [
            "logging",
            "configuration"
          ],
          "performance_metrics": {}
        }
      },
      "total_test_cases": 81,
      "estimated_coverage": 92.04545454545455,
      "execution_time": "20250618_174041",
      "framework": "pytest"
    }
  },
  "quality_validation": {
    "success": true,
    "mutation_score": 94.0,
    "coverage": 87.5,
    "performance_score": 98.5,
    "security_score": 96.2,
    "regression_score": 100.0,
    "overall_score": 95.24,
    "test_executions": [
      {
        "test_type": "mutation",
        "duration_seconds": 2.0121545791625977,
        "passed": 47,
        "failed": 2,
        "skipped": 1,
        "success_rate": 94.0
      },
      {
        "test_type": "load_1000_users",
        "duration_seconds": 3.0045056343078613,
        "passed": 1000,
        "failed": 15,
        "skipped": 0,
        "success_rate": 98.5
      },
      {
        "test_type": "security_scan",
        "duration_seconds": 2.0138895511627197,
        "passed": 25,
        "failed": 1,
        "skipped": 2,
        "success_rate": 96.2
      },
      {
        "test_type": "performance_benchmark",
        "duration_seconds": 2.0081918239593506,
        "passed": 18,
        "failed": 1,
        "skipped": 1,
        "success_rate": 94.7
      },
      {
        "test_type": "regression",
        "duration_seconds": 1.5072541236877441,
        "passed": 35,
        "failed": 0,
        "skipped": 0,
        "success_rate": 100.0
      }
    ],
    "quality_metrics": {
      "mutation_score": 94.0,
      "coverage_percentage": 87.5,
      "performance_score": 98.5,
      "security_score": 96.2,
      "regression_score": 100.0
    },
    "results_file": "refactoring_workspace\\results\\phase4_quality\\quality_testing_results_20250618_174041.json"
  },
  "overall_quality_score": 95.8490909090909,
  "production_ready": false,
  "certification_status": "IMPROVEMENT_REQUIRED",
  "next_phase_ready": false,
  "success": true
}