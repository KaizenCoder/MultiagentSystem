@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

title NextGeneration - Container Diagram (Refactorisé)

Person(user, "Developer")

System_Boundary(nextgen_system, "NextGeneration System") {
    Container(api_gateway, "API Gateway", "FastAPI", "Point d'entrée unifié\nmain.py (71 lignes)")
    
    Container_Boundary(routers, "Routers Layer") {
        Container(health_router, "Health Router", "FastAPI Router", "Health checks")
        Container(agents_router, "Agents Router", "FastAPI Router", "Gestion agents")
        Container(orchestration_router, "Orchestration Router", "FastAPI Router", "Coordination")
    }
    
    Container_Boundary(services, "Services Layer") {
        Container(orchestrator_service, "Orchestrator Service", "Python Service", "Logique métier")
        Container(agent_service, "Agent Service", "Python Service", "Gestion agents")
        Container(health_service, "Health Service", "Python Service", "Monitoring")
    }
    
    Container(dependencies, "Dependencies", "DI Container", "Injection dépendances")
}

ContainerDb(postgres, "PostgreSQL", "Base de données", "Données persistantes")
ContainerDb(redis, "Redis", "Cache", "Sessions, cache")
ContainerDb(chroma, "ChromaDB", "Vector DB", "Embeddings IA")

Container_Ext(prometheus, "Prometheus", "Metrics", "Collecte métriques")

Rel(user, api_gateway, "Uses", "HTTPS")
Rel(api_gateway, health_router, "Routes to")
Rel(api_gateway, agents_router, "Routes to")
Rel(api_gateway, orchestration_router, "Routes to")

Rel(health_router, health_service, "Uses")
Rel(agents_router, agent_service, "Uses")
Rel(orchestration_router, orchestrator_service, "Uses")

Rel(orchestrator_service, dependencies, "Injects")
Rel(agent_service, dependencies, "Injects")

Rel(orchestrator_service, postgres, "Persists", "SQL")
Rel(agent_service, redis, "Caches", "Key-Value")
Rel(orchestrator_service, chroma, "Stores", "Vectors")

Rel(api_gateway, prometheus, "Exposes /metrics")

@enduml