#!/bin/bash

# üß™ SCRIPT VALIDATION PHASE - PLAN ACTION CHATGPT
# Valide chaque phase du plan d'action prioritaire
# CONTRAINTE: Travail exclusivement dans 20250620_projet_logging_centralise/3_reponse_cursor/

echo "üß™ VALIDATION PHASE - TESTS COMPLETS"
echo "===================================="
echo "Timestamp: $(date)"
echo "R√©pertoire: $(pwd)"
echo "Contrainte: Travail uniquement dans 20250620_projet_logging_centralise/3_reponse_cursor/"
echo ""

# V√©rification r√©pertoire de travail
EXPECTED_DIR="20250620_projet_logging_centralise/3_reponse_cursor"
CURRENT_DIR=$(basename $(dirname $(pwd)))/$(basename $(pwd))

if [[ "$CURRENT_DIR" != "$EXPECTED_DIR" ]]; then
    echo "üö® ERREUR: R√©pertoire incorrect!"
    echo "Attendu: $EXPECTED_DIR"
    echo "Actuel: $CURRENT_DIR"
    echo "Veuillez vous placer dans le bon r√©pertoire."
    exit 1
fi

echo "‚úÖ R√©pertoire de travail correct: $CURRENT_DIR"
echo ""

# Variables de r√©sultat
UNIT_RESULT=1
INTEGRATION_RESULT=1
PERF_RESULT=1
CHATGPT_RESULT=1
OVERALL_RESULT=1

# 1. Tests unitaires
echo "1Ô∏è‚É£ Tests unitaires..."
echo "-------------------"
if python test_simple_chatgpt.py; then
    UNIT_RESULT=0
    echo "‚úÖ Tests unitaires PASS√âS"
else
    echo "‚ùå Tests unitaires √âCHOU√âS"
fi
echo ""

# 2. Tests int√©gration
echo "2Ô∏è‚É£ Tests int√©gration..."
echo "---------------------"
if python test_integration_chatgpt.py 2>/dev/null; then
    INTEGRATION_RESULT=0
    echo "‚úÖ Tests int√©gration PASS√âS"
else
    echo "‚ùå Tests int√©gration √âCHOU√âS (attendu si Phase 1 non termin√©e)"
fi
echo ""

# 3. Tests performance
echo "3Ô∏è‚É£ Tests performance..."
echo "--------------------"
python -c "
import time
import sys
try:
    from logging_manager_optimized import LoggingManager
    start = time.time()
    manager = LoggingManager()
    logger = manager.get_logger('test_perf')
    for i in range(1000):
        logger.info(f'Test performance {i}')
    duration = time.time() - start
    print(f'Performance: {duration:.3f}s for 1000 logs')
    if duration < 2.0:
        print('‚úÖ Performance ACCEPTABLE')
        sys.exit(0)
    else:
        print('‚ö†Ô∏è Performance LENTE')
        sys.exit(1)
except Exception as e:
    print(f'‚ùå Erreur performance: {e}')
    sys.exit(1)
"
PERF_RESULT=$?
echo ""

# 4. Tests fonctionnalit√©s ChatGPT
echo "4Ô∏è‚É£ Tests fonctionnalit√©s ChatGPT..."
echo "---------------------------------"
python -c "
import sys
try:
    from logging_manager_optimized import LoggingManager
    from template_manager_integrated import TemplateManager
    from agent_coordinateur_integrated import AgentCoordinateur
    
    # Test chargement modules
    lm = LoggingManager()
    tm = TemplateManager()
    ac = AgentCoordinateur()
    
    # Test fonctionnalit√©s ChatGPT
    features_ok = 0
    
    # Test Elasticsearch
    if hasattr(lm, 'elasticsearch_enabled'):
        features_ok += 1
        print('‚úÖ Elasticsearch Integration d√©tect√©e')
    
    # Test Encryption
    if hasattr(lm, 'encryption_enabled'):
        features_ok += 1
        print('‚úÖ Encryption Security d√©tect√©e')
    
    # Test Alerting
    if hasattr(lm, 'alerting_enabled'):
        features_ok += 1
        print('‚úÖ Intelligent Alerting d√©tect√©')
    
    # Test AI Coordination
    if hasattr(ac, 'ai_coordination_engine'):
        features_ok += 1
        print('‚úÖ AI Coordination d√©tect√©e')
    
    # Test Analytics
    if hasattr(tm, 'get_analytics'):
        features_ok += 1
        print('‚úÖ Advanced Analytics d√©tect√©es')
    
    print(f'Fonctionnalit√©s ChatGPT: {features_ok}/5')
    
    if features_ok >= 4:
        print('‚úÖ Int√©grations ChatGPT FONCTIONNELLES')
        sys.exit(0)
    else:
        print('‚ö†Ô∏è Int√©grations ChatGPT PARTIELLES')
        sys.exit(1)
        
except Exception as e:
    print(f'‚ùå Erreur int√©gration ChatGPT: {e}')
    sys.exit(1)
"
CHATGPT_RESULT=$?
echo ""

# 5. Test constante manquante (Phase 1 sp√©cifique)
echo "5Ô∏è‚É£ Test constante ALERT_THRESHOLD_ERROR..."
echo "----------------------------------------"
python -c "
import sys
try:
    from logging_manager_optimized import ALERT_THRESHOLD_ERROR
    print(f'‚úÖ Constante ALERT_THRESHOLD_ERROR trouv√©e: {ALERT_THRESHOLD_ERROR}')
    sys.exit(0)
except ImportError:
    print('‚ùå Constante ALERT_THRESHOLD_ERROR MANQUANTE (Phase 1 non termin√©e)')
    sys.exit(1)
"
CONST_RESULT=$?
echo ""

# Calcul r√©sultat global
echo "üìä R√âSUM√â VALIDATION"
echo "==================="
echo "Tests unitaires:      $([ $UNIT_RESULT -eq 0 ] && echo '‚úÖ PASS√â' || echo '‚ùå √âCHOU√â')"
echo "Tests int√©gration:    $([ $INTEGRATION_RESULT -eq 0 ] && echo '‚úÖ PASS√â' || echo '‚ùå √âCHOU√â')"
echo "Tests performance:    $([ $PERF_RESULT -eq 0 ] && echo '‚úÖ PASS√â' || echo '‚ùå √âCHOU√â')"
echo "Tests ChatGPT:        $([ $CHATGPT_RESULT -eq 0 ] && echo '‚úÖ PASS√â' || echo '‚ùå √âCHOU√â')"
echo "Constante manquante:  $([ $CONST_RESULT -eq 0 ] && echo '‚úÖ PASS√â' || echo '‚ùå √âCHOU√â')"
echo ""

# D√©terminer phase actuelle
if [ $CONST_RESULT -eq 0 ] && [ $INTEGRATION_RESULT -eq 0 ] && [ $UNIT_RESULT -eq 0 ]; then
    echo "üéØ PHASE 1 CRITIQUE: ‚úÖ TERMIN√âE"
    PHASE_STATUS="PHASE_1_COMPLETE"
elif [ $UNIT_RESULT -eq 0 ] && [ $CHATGPT_RESULT -eq 0 ] && [ $PERF_RESULT -eq 0 ]; then
    echo "üî• PHASE 2 IMPORTANTE: En cours/√Ä valider"
    PHASE_STATUS="PHASE_2_PROGRESS"
else
    echo "‚ö° PHASE 1 CRITIQUE: ‚ùå EN COURS"
    PHASE_STATUS="PHASE_1_IN_PROGRESS"
fi

# Calcul score estim√©
TESTS_PASSED=0
[ $UNIT_RESULT -eq 0 ] && TESTS_PASSED=$((TESTS_PASSED + 1))
[ $INTEGRATION_RESULT -eq 0 ] && TESTS_PASSED=$((TESTS_PASSED + 1))
[ $PERF_RESULT -eq 0 ] && TESTS_PASSED=$((TESTS_PASSED + 1))
[ $CHATGPT_RESULT -eq 0 ] && TESTS_PASSED=$((TESTS_PASSED + 1))
[ $CONST_RESULT -eq 0 ] && TESTS_PASSED=$((TESTS_PASSED + 1))

SCORE_ESTIME=$(( (TESTS_PASSED * 100) / 5 ))
echo ""
echo "üìà Score estim√©: ${SCORE_ESTIME}% (${TESTS_PASSED}/5 tests)"

# R√©sultat final
if [ $UNIT_RESULT -eq 0 ] && [ $INTEGRATION_RESULT -eq 0 ] && [ $PERF_RESULT -eq 0 ] && [ $CHATGPT_RESULT -eq 0 ] && [ $CONST_RESULT -eq 0 ]; then
    echo ""
    echo "üèÜ VALIDATION COMPL√àTE R√âUSSIE"
    echo "Phase suivante recommand√©e"
    OVERALL_RESULT=0
else
    echo ""
    echo "‚ö†Ô∏è VALIDATION PARTIELLE"
    echo "Corrections n√©cessaires avant phase suivante"
    OVERALL_RESULT=1
fi

echo ""
echo "Status: $PHASE_STATUS"
echo "R√©pertoire v√©rifi√©: $CURRENT_DIR"
echo "Timestamp fin: $(date)"

exit $OVERALL_RESULT 