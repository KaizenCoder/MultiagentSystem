name: Security Validation CI

on:
  push:
    branches: [ main, develop, feature/* ]
    paths:
      - 'orchestrator/**'
      - 'tests/**'
      - 'requirements*.txt'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'orchestrator/**'
      - 'tests/**'

jobs:
  security-validation:
    name: Security & Tests Validation
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    strategy:
      matrix:
        python-version: ["3.11"]
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r orchestrator/requirements.txt
        pip install -r orchestrator/requirements-dev.txt
        
    - name: 🛡️ Security scan with Bandit
      run: |
        bandit -r orchestrator/ -f json -o bandit-report.json
        bandit -r orchestrator/ -ll  # Fail on HIGH/CRITICAL
        
    - name: 📦 Dependencies vulnerability scan
      run: |
        safety check --json --output safety-report.json
        safety check  # Fail on vulnerabilities
        
    - name: 🧪 Run security tests
      run: |
        pytest tests/security/ -v --tb=short -m security
        
    - name: 🧪 Run unit tests with coverage
      run: |
        pytest tests/unit/ --cov=orchestrator --cov-report=xml --cov-fail-under=40
        
    - name: 🔍 Static analysis with mypy
      run: |
        mypy orchestrator/ --ignore-missing-imports --no-strict-optional
        
    - name: 📊 Upload coverage to Codecov
      if: success()
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        
    - name: 📋 Upload security reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: security-reports-${{ github.sha }}
        path: |
          bandit-report.json
          safety-report.json
          coverage.xml
        retention-days: 30

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: security-validation
    timeout-minutes: 15
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpass
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        cache: 'pip'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r orchestrator/requirements.txt
        pip install -r orchestrator/requirements-dev.txt
        
    - name: 🔧 Set up environment
      run: |
        cp env.example .env
        echo "DATABASE_URL=postgresql://testuser:testpass@localhost:5432/testdb" >> .env
        echo "TESTING=true" >> .env
        
    - name: 🧪 Run integration tests
      run: |
        pytest tests/integration/ -v --tb=short -m integration
        
    - name: 🧪 Run smoke tests
      run: |
        pytest tests/ -v --tb=short -m smoke

  load-testing:
    name: Basic Load Testing
    runs-on: ubuntu-latest
    needs: [security-validation, integration-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 10
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        cache: 'pip'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r orchestrator/requirements.txt
        pip install locust
        
    - name: 🚀 Start application
      run: |
        cd orchestrator
        python -m uvicorn app.main:app --host 0.0.0.0 --port 8002 &
        sleep 10  # Wait for startup
        
    - name: 🏋️ Run basic load test
      run: |
        locust -f tests/load/basic_load_test.py --headless -u 10 -r 2 -t 60s --host http://localhost:8002
        
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: 📦 Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety semgrep
        
    - name: 🔍 Advanced security scan with Semgrep
      run: |
        semgrep --config=auto orchestrator/ --json --output semgrep-report.json
        semgrep --config=auto orchestrator/ --severity ERROR
        
    - name: 📋 Upload security audit
      uses: actions/upload-artifact@v3
      with:
        name: security-audit-${{ github.sha }}
        path: semgrep-report.json
        retention-days: 90
