{
  "timestamp": "",
  "repertoire_teste": "C:\\Dev\\agents",
  "statistiques": {
    "total_agents": 3,
    "agents_conformes": 0,
    "taux_conformite": 0.0,
    "score_moyen": 42.666666666666664,
    "distribution_conformite": {
      "CONFORME_EXCELLENT": 0,
      "CONFORME_STRICT": 0,
      "CONFORME_PARTIEL": 1,
      "NON_CONFORME": 2
    }
  },
  "resultats_detailles": {
    "agent_23_fastapi_orchestration_enterprise_v2.py": {
      "agent_path": "C:\\Dev\\agents\\agent_23_fastapi_orchestration_enterprise_v2.py",
      "timestamp": "2025-06-19T15:52:10.673997",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": false,
          "conformite_level": "NON_CONFORME_MINEUR",
          "checks_obligatoires": {
            "pattern_factory_import_correct": false,
            "agent_inheritance_strict": true,
            "factory_function_naming": false,
            "fallback_implementation": false,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": false,
            "logging_pattern_factory": false,
            "configuration_pattern": true,
            "error_handling_pattern": false,
            "main_function_pattern": false
          },
          "score_obligatoire": 40.0,
          "score_recommande": 20.0,
          "score_global": 36.0,
          "recommendations": [
            "CRITIQUE: Ajouter import Pattern Factory standard avec fallback",
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "CRITIQUE: Implémenter fallback Pattern Factory obligatoire",
            "RECOMMANDÉ: Implémenter toutes les méthodes async",
            "RECOMMANDÉ: Améliorer logging Pattern Factory standardisé",
            "RECOMMANDÉ: Renforcer gestion d'erreurs",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: NON_CONFORME_MINEUR (36.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": false,
            "shutdown": false,
            "health_check": false,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 40.0,
          "message": "Méthodes obligatoires: 40.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 7.04,
            "lines_count": 197,
            "code_lines": 145,
            "functions_count": 9,
            "classes_count": 7
          },
          "score": 91.0,
          "message": "Performance: 91.0/100"
        }
      },
      "score_global": 50.6,
      "status": "warning"
    },
    "agent_25_production_monitoring_enterprise.py": {
      "agent_path": "C:\\Dev\\agents\\agent_25_production_monitoring_enterprise.py",
      "timestamp": "2025-06-19T15:52:10.676001",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": false,
          "conformite_level": "CONFORME_PARTIEL",
          "checks_obligatoires": {
            "pattern_factory_import_correct": false,
            "agent_inheritance_strict": true,
            "factory_function_naming": false,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": false,
            "configuration_pattern": true,
            "error_handling_pattern": false,
            "main_function_pattern": false
          },
          "score_obligatoire": 60.0,
          "score_recommande": 40.0,
          "score_global": 56.0,
          "recommendations": [
            "CRITIQUE: Ajouter import Pattern Factory standard avec fallback",
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "RECOMMANDÉ: Améliorer logging Pattern Factory standardisé",
            "RECOMMANDÉ: Renforcer gestion d'erreurs",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: CONFORME_PARTIEL (56.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 16.48,
            "lines_count": 444,
            "code_lines": 354,
            "functions_count": 25,
            "classes_count": 8
          },
          "score": 75.0,
          "message": "Performance: 75.0/100"
        }
      },
      "score_global": 66.2,
      "status": "warning"
    },
    "agent_25_production_monitoring_enterprise_v2.py": {
      "agent_path": "C:\\Dev\\agents\\agent_25_production_monitoring_enterprise_v2.py",
      "timestamp": "2025-06-19T15:52:10.679002",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": false,
          "conformite_level": "NON_CONFORME_MINEUR",
          "checks_obligatoires": {
            "pattern_factory_import_correct": false,
            "agent_inheritance_strict": true,
            "factory_function_naming": false,
            "fallback_implementation": false,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": false,
            "logging_pattern_factory": false,
            "configuration_pattern": true,
            "error_handling_pattern": false,
            "main_function_pattern": false
          },
          "score_obligatoire": 40.0,
          "score_recommande": 20.0,
          "score_global": 36.0,
          "recommendations": [
            "CRITIQUE: Ajouter import Pattern Factory standard avec fallback",
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "CRITIQUE: Implémenter fallback Pattern Factory obligatoire",
            "RECOMMANDÉ: Implémenter toutes les méthodes async",
            "RECOMMANDÉ: Améliorer logging Pattern Factory standardisé",
            "RECOMMANDÉ: Renforcer gestion d'erreurs",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: NON_CONFORME_MINEUR (36.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": false,
            "shutdown": false,
            "health_check": false,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 40.0,
          "message": "Méthodes obligatoires: 40.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 7.5,
            "lines_count": 202,
            "code_lines": 150,
            "functions_count": 9,
            "classes_count": 8
          },
          "score": 91.0,
          "message": "Performance: 91.0/100"
        }
      },
      "score_global": 50.6,
      "status": "warning"
    }
  }
}