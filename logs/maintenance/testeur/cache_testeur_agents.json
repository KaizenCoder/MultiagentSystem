{
  "test_results": {
    "C:\\Dev\\nextgeneration\\agent_1_analyseur_structure.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_1_analyseur_structure.py",
      "timestamp": "2025-06-19T16:42:31.531986",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_EXCELLENT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": true,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 100.0,
          "score_recommande": 100.0,
          "score_global": 100.0,
          "recommendations": [],
          "message": "Conformité Pattern Factory: CONFORME_EXCELLENT (100.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 25.17,
            "lines_count": 596,
            "code_lines": 416,
            "functions_count": 29,
            "classes_count": 4
          },
          "score": 75.0,
          "message": "Performance: 75.0/100"
        }
      },
      "score_global": 66.2,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_2_evaluateur_utilite.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_2_evaluateur_utilite.py",
      "timestamp": "2025-06-19T16:42:31.535986",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_EXCELLENT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": true,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 100.0,
          "score_recommande": 100.0,
          "score_global": 100.0,
          "recommendations": [],
          "message": "Conformité Pattern Factory: CONFORME_EXCELLENT (100.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 35.56,
            "lines_count": 872,
            "code_lines": 604,
            "functions_count": 43,
            "classes_count": 4
          },
          "score": 75.0,
          "message": "Performance: 75.0/100"
        }
      },
      "score_global": 66.2,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_3_adaptateur_code.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_3_adaptateur_code.py",
      "timestamp": "2025-06-19T16:42:31.539991",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_STRICT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": false,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 80.0,
          "score_recommande": 100.0,
          "score_global": 84.0,
          "recommendations": [
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte"
          ],
          "message": "Conformité Pattern Factory: CONFORME_STRICT (84.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 7.3,
            "lines_count": 193,
            "code_lines": 134,
            "functions_count": 21,
            "classes_count": 4
          },
          "score": 79.0,
          "message": "Performance: 79.0/100"
        }
      },
      "score_global": 66.8,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_4_testeur_integration.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_4_testeur_integration.py",
      "timestamp": "2025-06-19T16:42:31.541991",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_STRICT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": false,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 80.0,
          "score_recommande": 100.0,
          "score_global": 84.0,
          "recommendations": [
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte"
          ],
          "message": "Conformité Pattern Factory: CONFORME_STRICT (84.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 7.42,
            "lines_count": 193,
            "code_lines": 134,
            "functions_count": 21,
            "classes_count": 4
          },
          "score": 79.0,
          "message": "Performance: 79.0/100"
        }
      },
      "score_global": 66.8,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_5_documenteur.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_5_documenteur.py",
      "timestamp": "2025-06-19T16:42:31.542986",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_STRICT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": false,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 80.0,
          "score_recommande": 100.0,
          "score_global": 84.0,
          "recommendations": [
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte"
          ],
          "message": "Conformité Pattern Factory: CONFORME_STRICT (84.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 11.23,
            "lines_count": 306,
            "code_lines": 206,
            "functions_count": 23,
            "classes_count": 4
          },
          "score": 77.0,
          "message": "Performance: 77.0/100"
        }
      },
      "score_global": 66.5,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_6_validateur_final.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_6_validateur_final.py",
      "timestamp": "2025-06-19T16:42:31.543988",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_STRICT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": false,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 80.0,
          "score_recommande": 100.0,
          "score_global": 84.0,
          "recommendations": [
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte"
          ],
          "message": "Conformité Pattern Factory: CONFORME_STRICT (84.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 7.33,
            "lines_count": 193,
            "code_lines": 134,
            "functions_count": 21,
            "classes_count": 4
          },
          "score": 79.0,
          "message": "Performance: 79.0/100"
        }
      },
      "score_global": 66.8,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_adaptateur_documentation.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_adaptateur_documentation.py",
      "timestamp": "2025-06-19T16:42:31.545987",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_EXCELLENT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": true,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 100.0,
          "score_recommande": 100.0,
          "score_global": 100.0,
          "recommendations": [],
          "message": "Conformité Pattern Factory: CONFORME_EXCELLENT (100.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 7.55,
            "lines_count": 193,
            "code_lines": 134,
            "functions_count": 21,
            "classes_count": 4
          },
          "score": 79.0,
          "message": "Performance: 79.0/100"
        }
      },
      "score_global": 66.8,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_analyseur_outils.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_analyseur_outils.py",
      "timestamp": "2025-06-19T16:42:31.546988",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_EXCELLENT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": true,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 100.0,
          "score_recommande": 100.0,
          "score_global": 100.0,
          "recommendations": [],
          "message": "Conformité Pattern Factory: CONFORME_EXCELLENT (100.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 7.3,
            "lines_count": 193,
            "code_lines": 134,
            "functions_count": 21,
            "classes_count": 4
          },
          "score": 79.0,
          "message": "Performance: 79.0/100"
        }
      },
      "score_global": 66.8,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_coordinateur_refactorisation_pattern_factory.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_coordinateur_refactorisation_pattern_factory.py",
      "timestamp": "2025-06-19T16:42:31.547987",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_EXCELLENT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": true,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 100.0,
          "score_recommande": 100.0,
          "score_global": 100.0,
          "recommendations": [],
          "message": "Conformité Pattern Factory: CONFORME_EXCELLENT (100.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 33.38,
            "lines_count": 792,
            "code_lines": 582,
            "functions_count": 53,
            "classes_count": 13
          },
          "score": 75.0,
          "message": "Performance: 75.0/100"
        }
      },
      "score_global": 66.2,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_coordinateur_refactorisation_simple.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_coordinateur_refactorisation_simple.py",
      "timestamp": "2025-06-19T16:42:31.552994",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": false,
          "conformite_level": "CONFORME_PARTIEL",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": false,
            "factory_function_naming": false,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 60.0,
          "score_recommande": 100.0,
          "score_global": 68.0,
          "recommendations": [
            "CRITIQUE: Corriger héritage strict de la classe Agent",
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte"
          ],
          "message": "Conformité Pattern Factory: CONFORME_PARTIEL (68.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 60.0,
          "message": "Méthodes obligatoires: 60.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 22.69,
            "lines_count": 565,
            "code_lines": 413,
            "functions_count": 38,
            "classes_count": 8
          },
          "score": 75.0,
          "message": "Performance: 75.0/100"
        }
      },
      "score_global": 54.2,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_coordinateur_reorganisation_outils.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_coordinateur_reorganisation_outils.py",
      "timestamp": "2025-06-19T16:42:31.555994",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_STRICT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": false,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 80.0,
          "score_recommande": 100.0,
          "score_global": 84.0,
          "recommendations": [
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte"
          ],
          "message": "Conformité Pattern Factory: CONFORME_STRICT (84.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 60.0,
          "message": "Méthodes obligatoires: 60.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 5.76,
            "lines_count": 151,
            "code_lines": 108,
            "functions_count": 14,
            "classes_count": 4
          },
          "score": 86.0,
          "message": "Performance: 86.0/100"
        }
      },
      "score_global": 55.9,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_docteur_reparation.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_docteur_reparation.py",
      "timestamp": "2025-06-19T16:42:31.556993",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_EXCELLENT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": true,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 100.0,
          "score_recommande": 100.0,
          "score_global": 100.0,
          "recommendations": [],
          "message": "Conformité Pattern Factory: CONFORME_EXCELLENT (100.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 45.11,
            "lines_count": 1099,
            "code_lines": 819,
            "functions_count": 57,
            "classes_count": 7
          },
          "score": 75.0,
          "message": "Performance: 75.0/100"
        }
      },
      "score_global": 66.2,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_meta_strategique.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_meta_strategique.py",
      "timestamp": "2025-06-19T16:42:31.561993",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_STRICT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": false,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 80.0,
          "score_recommande": 100.0,
          "score_global": 84.0,
          "recommendations": [
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte"
          ],
          "message": "Conformité Pattern Factory: CONFORME_STRICT (84.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 60.0,
          "message": "Méthodes obligatoires: 60.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 5.49,
            "lines_count": 151,
            "code_lines": 108,
            "functions_count": 14,
            "classes_count": 4
          },
          "score": 86.0,
          "message": "Performance: 86.0/100"
        }
      },
      "score_global": 55.9,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_organisateur_structure.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_organisateur_structure.py",
      "timestamp": "2025-06-19T16:42:31.562994",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_EXCELLENT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": true,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 100.0,
          "score_recommande": 100.0,
          "score_global": 100.0,
          "recommendations": [],
          "message": "Conformité Pattern Factory: CONFORME_EXCELLENT (100.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 60.0,
          "message": "Méthodes obligatoires: 60.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 5.61,
            "lines_count": 151,
            "code_lines": 108,
            "functions_count": 14,
            "classes_count": 4
          },
          "score": 86.0,
          "message": "Performance: 86.0/100"
        }
      },
      "score_global": 55.9,
      "status": "warning"
    },
    "C:\\Dev\\nextgeneration\\agent_rapport_final.py": {
      "agent_path": "C:\\Dev\\nextgeneration\\agent_rapport_final.py",
      "timestamp": "2025-06-19T16:42:31.564995",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_EXCELLENT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": true,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": true,
            "main_function_pattern": true
          },
          "score_obligatoire": 100.0,
          "score_recommande": 100.0,
          "score_global": 100.0,
          "recommendations": [],
          "message": "Conformité Pattern Factory: CONFORME_EXCELLENT (100.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 60.0,
          "message": "Méthodes obligatoires: 60.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 5.46,
            "lines_count": 151,
            "code_lines": 108,
            "functions_count": 14,
            "classes_count": 4
          },
          "score": 86.0,
          "message": "Performance: 86.0/100"
        }
      },
      "score_global": 55.9,
      "status": "warning"
    },
    "C:\\Dev\\agents\\agent_23_fastapi_orchestration_enterprise_v2.py": {
      "agent_path": "C:\\Dev\\agents\\agent_23_fastapi_orchestration_enterprise_v2.py",
      "timestamp": "2025-06-19T15:59:50.975786",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_STRICT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": false,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": false,
            "main_function_pattern": false
          },
          "score_obligatoire": 80.0,
          "score_recommande": 60.0,
          "score_global": 76.0,
          "recommendations": [
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "RECOMMANDÉ: Renforcer gestion d'erreurs",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: CONFORME_STRICT (76.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 9.39,
            "lines_count": 259,
            "code_lines": 191,
            "functions_count": 19,
            "classes_count": 10
          },
          "score": 81.0,
          "message": "Performance: 81.0/100"
        }
      },
      "score_global": 67.2,
      "status": "warning"
    },
    "C:\\Dev\\agents\\agent_25_production_monitoring_enterprise.py": {
      "agent_path": "C:\\Dev\\agents\\agent_25_production_monitoring_enterprise.py",
      "timestamp": "2025-06-19T15:59:50.977837",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_STRICT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": false,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": false,
            "configuration_pattern": true,
            "error_handling_pattern": false,
            "main_function_pattern": false
          },
          "score_obligatoire": 80.0,
          "score_recommande": 40.0,
          "score_global": 72.0,
          "recommendations": [
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "RECOMMANDÉ: Améliorer logging Pattern Factory standardisé",
            "RECOMMANDÉ: Renforcer gestion d'erreurs",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: CONFORME_STRICT (72.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 17.96,
            "lines_count": 481,
            "code_lines": 383,
            "functions_count": 31,
            "classes_count": 11
          },
          "score": 75.0,
          "message": "Performance: 75.0/100"
        }
      },
      "score_global": 66.2,
      "status": "warning"
    },
    "C:\\Dev\\agents\\agent_25_production_monitoring_enterprise_v2.py": {
      "agent_path": "C:\\Dev\\agents\\agent_25_production_monitoring_enterprise_v2.py",
      "timestamp": "2025-06-19T15:59:50.981759",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": true,
          "conformite_level": "CONFORME_STRICT",
          "checks_obligatoires": {
            "pattern_factory_import_correct": true,
            "agent_inheritance_strict": true,
            "factory_function_naming": false,
            "fallback_implementation": true,
            "pattern_factory_docstring": true
          },
          "checks_recommandees": {
            "async_methods_present": true,
            "logging_pattern_factory": true,
            "configuration_pattern": true,
            "error_handling_pattern": false,
            "main_function_pattern": false
          },
          "score_obligatoire": 80.0,
          "score_recommande": 60.0,
          "score_global": 76.0,
          "recommendations": [
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "RECOMMANDÉ: Renforcer gestion d'erreurs",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: CONFORME_STRICT (76.0%)"
        },
        "required_methods": {
          "success": true,
          "methodes_trouvees": {
            "startup": true,
            "shutdown": true,
            "health_check": true,
            "execute_task": true,
            "get_capabilities": true
          },
          "score": 100.0,
          "message": "Méthodes obligatoires: 100.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 9.81,
            "lines_count": 264,
            "code_lines": 196,
            "functions_count": 19,
            "classes_count": 11
          },
          "score": 81.0,
          "message": "Performance: 81.0/100"
        }
      },
      "score_global": 67.2,
      "status": "warning"
    },
    "docs\\agents_postgresql_resolution\\agent team\\agent_diagnostic_postgres_final.py": {
      "agent_path": "docs\\agents_postgresql_resolution\\agent team\\agent_diagnostic_postgres_final.py",
      "timestamp": "2025-06-19T16:42:31.569998",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": false,
          "conformite_level": "NON_CONFORME_CRITIQUE",
          "checks_obligatoires": {
            "pattern_factory_import_correct": false,
            "agent_inheritance_strict": false,
            "factory_function_naming": false,
            "fallback_implementation": false,
            "pattern_factory_docstring": false
          },
          "checks_recommandees": {
            "async_methods_present": false,
            "logging_pattern_factory": false,
            "configuration_pattern": false,
            "error_handling_pattern": true,
            "main_function_pattern": false
          },
          "score_obligatoire": 0.0,
          "score_recommande": 20.0,
          "score_global": 4.0,
          "recommendations": [
            "CRITIQUE: Ajouter import Pattern Factory standard avec fallback",
            "CRITIQUE: Corriger héritage strict de la classe Agent",
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "CRITIQUE: Implémenter fallback Pattern Factory obligatoire",
            "CRITIQUE: Ajouter documentation Pattern Factory",
            "RECOMMANDÉ: Implémenter toutes les méthodes async",
            "RECOMMANDÉ: Améliorer logging Pattern Factory standardisé",
            "RECOMMANDÉ: Implémenter pattern de configuration",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: NON_CONFORME_CRITIQUE (4.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": false,
            "shutdown": false,
            "health_check": false,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 0.0,
          "message": "Méthodes obligatoires: 0.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 17.1,
            "lines_count": 454,
            "code_lines": 333,
            "functions_count": 8,
            "classes_count": 1
          },
          "score": 92.0,
          "message": "Performance: 92.0/100"
        }
      },
      "score_global": 38.8,
      "status": "warning"
    },
    "docs\\agents_postgresql_resolution\\agent team\\agent_docker_specialist.py": {
      "agent_path": "docs\\agents_postgresql_resolution\\agent team\\agent_docker_specialist.py",
      "timestamp": "2025-06-19T16:42:31.572005",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": false,
          "conformite_level": "NON_CONFORME_CRITIQUE",
          "checks_obligatoires": {
            "pattern_factory_import_correct": false,
            "agent_inheritance_strict": false,
            "factory_function_naming": false,
            "fallback_implementation": false,
            "pattern_factory_docstring": false
          },
          "checks_recommandees": {
            "async_methods_present": false,
            "logging_pattern_factory": false,
            "configuration_pattern": false,
            "error_handling_pattern": true,
            "main_function_pattern": false
          },
          "score_obligatoire": 0.0,
          "score_recommande": 20.0,
          "score_global": 4.0,
          "recommendations": [
            "CRITIQUE: Ajouter import Pattern Factory standard avec fallback",
            "CRITIQUE: Corriger héritage strict de la classe Agent",
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "CRITIQUE: Implémenter fallback Pattern Factory obligatoire",
            "CRITIQUE: Ajouter documentation Pattern Factory",
            "RECOMMANDÉ: Implémenter toutes les méthodes async",
            "RECOMMANDÉ: Améliorer logging Pattern Factory standardisé",
            "RECOMMANDÉ: Implémenter pattern de configuration",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: NON_CONFORME_CRITIQUE (4.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": false,
            "shutdown": false,
            "health_check": false,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 0.0,
          "message": "Méthodes obligatoires: 0.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 27.56,
            "lines_count": 700,
            "code_lines": 488,
            "functions_count": 12,
            "classes_count": 1
          },
          "score": 88.0,
          "message": "Performance: 88.0/100"
        }
      },
      "score_global": 38.2,
      "status": "warning"
    },
    "docs\\agents_postgresql_resolution\\agent team\\agent_documentation_manager.py": {
      "agent_path": "docs\\agents_postgresql_resolution\\agent team\\agent_documentation_manager.py",
      "timestamp": "2025-06-19T16:42:31.575004",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": false,
          "conformite_level": "NON_CONFORME_CRITIQUE",
          "checks_obligatoires": {
            "pattern_factory_import_correct": false,
            "agent_inheritance_strict": false,
            "factory_function_naming": false,
            "fallback_implementation": false,
            "pattern_factory_docstring": false
          },
          "checks_recommandees": {
            "async_methods_present": false,
            "logging_pattern_factory": false,
            "configuration_pattern": false,
            "error_handling_pattern": false,
            "main_function_pattern": false
          },
          "score_obligatoire": 0.0,
          "score_recommande": 0.0,
          "score_global": 0.0,
          "recommendations": [
            "CRITIQUE: Ajouter import Pattern Factory standard avec fallback",
            "CRITIQUE: Corriger héritage strict de la classe Agent",
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "CRITIQUE: Implémenter fallback Pattern Factory obligatoire",
            "CRITIQUE: Ajouter documentation Pattern Factory",
            "RECOMMANDÉ: Implémenter toutes les méthodes async",
            "RECOMMANDÉ: Améliorer logging Pattern Factory standardisé",
            "RECOMMANDÉ: Implémenter pattern de configuration",
            "RECOMMANDÉ: Renforcer gestion d'erreurs",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: NON_CONFORME_CRITIQUE (0.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": false,
            "shutdown": false,
            "health_check": false,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 0.0,
          "message": "Méthodes obligatoires: 0.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 9.99,
            "lines_count": 263,
            "code_lines": 170,
            "functions_count": 5,
            "classes_count": 1
          },
          "score": 95.0,
          "message": "Performance: 95.0/100"
        }
      },
      "score_global": 39.2,
      "status": "warning"
    },
    "docs\\agents_postgresql_resolution\\agent team\\agent_resolution_finale.py": {
      "agent_path": "docs\\agents_postgresql_resolution\\agent team\\agent_resolution_finale.py",
      "timestamp": "2025-06-19T16:42:31.577005",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": false,
          "conformite_level": "NON_CONFORME_CRITIQUE",
          "checks_obligatoires": {
            "pattern_factory_import_correct": false,
            "agent_inheritance_strict": false,
            "factory_function_naming": false,
            "fallback_implementation": false,
            "pattern_factory_docstring": false
          },
          "checks_recommandees": {
            "async_methods_present": false,
            "logging_pattern_factory": false,
            "configuration_pattern": false,
            "error_handling_pattern": true,
            "main_function_pattern": false
          },
          "score_obligatoire": 0.0,
          "score_recommande": 20.0,
          "score_global": 4.0,
          "recommendations": [
            "CRITIQUE: Ajouter import Pattern Factory standard avec fallback",
            "CRITIQUE: Corriger héritage strict de la classe Agent",
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "CRITIQUE: Implémenter fallback Pattern Factory obligatoire",
            "CRITIQUE: Ajouter documentation Pattern Factory",
            "RECOMMANDÉ: Implémenter toutes les méthodes async",
            "RECOMMANDÉ: Améliorer logging Pattern Factory standardisé",
            "RECOMMANDÉ: Implémenter pattern de configuration",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: NON_CONFORME_CRITIQUE (4.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": false,
            "shutdown": false,
            "health_check": false,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 0.0,
          "message": "Méthodes obligatoires: 0.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 13.63,
            "lines_count": 348,
            "code_lines": 252,
            "functions_count": 8,
            "classes_count": 1
          },
          "score": 92.0,
          "message": "Performance: 92.0/100"
        }
      },
      "score_global": 38.8,
      "status": "warning"
    },
    "docs\\agents_postgresql_resolution\\agent team\\agent_sqlalchemy_fixer.py": {
      "agent_path": "docs\\agents_postgresql_resolution\\agent team\\agent_sqlalchemy_fixer.py",
      "timestamp": "2025-06-19T16:42:31.578998",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": false,
          "conformite_level": "NON_CONFORME_CRITIQUE",
          "checks_obligatoires": {
            "pattern_factory_import_correct": false,
            "agent_inheritance_strict": false,
            "factory_function_naming": false,
            "fallback_implementation": false,
            "pattern_factory_docstring": false
          },
          "checks_recommandees": {
            "async_methods_present": false,
            "logging_pattern_factory": false,
            "configuration_pattern": false,
            "error_handling_pattern": true,
            "main_function_pattern": false
          },
          "score_obligatoire": 0.0,
          "score_recommande": 20.0,
          "score_global": 4.0,
          "recommendations": [
            "CRITIQUE: Ajouter import Pattern Factory standard avec fallback",
            "CRITIQUE: Corriger héritage strict de la classe Agent",
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "CRITIQUE: Implémenter fallback Pattern Factory obligatoire",
            "CRITIQUE: Ajouter documentation Pattern Factory",
            "RECOMMANDÉ: Implémenter toutes les méthodes async",
            "RECOMMANDÉ: Améliorer logging Pattern Factory standardisé",
            "RECOMMANDÉ: Implémenter pattern de configuration",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: NON_CONFORME_CRITIQUE (4.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": false,
            "shutdown": false,
            "health_check": false,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 0.0,
          "message": "Méthodes obligatoires: 0.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 21.84,
            "lines_count": 630,
            "code_lines": 427,
            "functions_count": 10,
            "classes_count": 3
          },
          "score": 90.0,
          "message": "Performance: 90.0/100"
        }
      },
      "score_global": 38.5,
      "status": "warning"
    },
    "docs\\agents_postgresql_resolution\\agent team\\agent_testing_specialist.py": {
      "agent_path": "docs\\agents_postgresql_resolution\\agent team\\agent_testing_specialist.py",
      "timestamp": "2025-06-19T16:42:31.580999",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": false,
          "conformite_level": "NON_CONFORME_CRITIQUE",
          "checks_obligatoires": {
            "pattern_factory_import_correct": false,
            "agent_inheritance_strict": false,
            "factory_function_naming": false,
            "fallback_implementation": false,
            "pattern_factory_docstring": false
          },
          "checks_recommandees": {
            "async_methods_present": false,
            "logging_pattern_factory": false,
            "configuration_pattern": false,
            "error_handling_pattern": true,
            "main_function_pattern": false
          },
          "score_obligatoire": 0.0,
          "score_recommande": 20.0,
          "score_global": 4.0,
          "recommendations": [
            "CRITIQUE: Ajouter import Pattern Factory standard avec fallback",
            "CRITIQUE: Corriger héritage strict de la classe Agent",
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "CRITIQUE: Implémenter fallback Pattern Factory obligatoire",
            "CRITIQUE: Ajouter documentation Pattern Factory",
            "RECOMMANDÉ: Implémenter toutes les méthodes async",
            "RECOMMANDÉ: Améliorer logging Pattern Factory standardisé",
            "RECOMMANDÉ: Implémenter pattern de configuration",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: NON_CONFORME_CRITIQUE (4.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": false,
            "shutdown": false,
            "health_check": false,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 0.0,
          "message": "Méthodes obligatoires: 0.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 26.9,
            "lines_count": 753,
            "code_lines": 527,
            "functions_count": 22,
            "classes_count": 4
          },
          "score": 78.0,
          "message": "Performance: 78.0/100"
        }
      },
      "score_global": 36.7,
      "status": "warning"
    },
    "docs\\agents_postgresql_resolution\\agent team\\agent_web_researcher.py": {
      "agent_path": "docs\\agents_postgresql_resolution\\agent team\\agent_web_researcher.py",
      "timestamp": "2025-06-19T16:42:31.584178",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": false,
          "conformite_level": "NON_CONFORME_CRITIQUE",
          "checks_obligatoires": {
            "pattern_factory_import_correct": false,
            "agent_inheritance_strict": false,
            "factory_function_naming": false,
            "fallback_implementation": false,
            "pattern_factory_docstring": false
          },
          "checks_recommandees": {
            "async_methods_present": false,
            "logging_pattern_factory": false,
            "configuration_pattern": false,
            "error_handling_pattern": true,
            "main_function_pattern": false
          },
          "score_obligatoire": 0.0,
          "score_recommande": 20.0,
          "score_global": 4.0,
          "recommendations": [
            "CRITIQUE: Ajouter import Pattern Factory standard avec fallback",
            "CRITIQUE: Corriger héritage strict de la classe Agent",
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "CRITIQUE: Implémenter fallback Pattern Factory obligatoire",
            "CRITIQUE: Ajouter documentation Pattern Factory",
            "RECOMMANDÉ: Implémenter toutes les méthodes async",
            "RECOMMANDÉ: Améliorer logging Pattern Factory standardisé",
            "RECOMMANDÉ: Implémenter pattern de configuration",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: NON_CONFORME_CRITIQUE (4.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": false,
            "shutdown": false,
            "health_check": false,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 0.0,
          "message": "Méthodes obligatoires: 0.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 24.28,
            "lines_count": 724,
            "code_lines": 521,
            "functions_count": 7,
            "classes_count": 5
          },
          "score": 93.0,
          "message": "Performance: 93.0/100"
        }
      },
      "score_global": 39.0,
      "status": "warning"
    },
    "docs\\agents_postgresql_resolution\\agent team\\agent_windows_postgres.py": {
      "agent_path": "docs\\agents_postgresql_resolution\\agent team\\agent_windows_postgres.py",
      "timestamp": "2025-06-19T16:42:31.586178",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": false,
          "conformite_level": "NON_CONFORME_CRITIQUE",
          "checks_obligatoires": {
            "pattern_factory_import_correct": false,
            "agent_inheritance_strict": false,
            "factory_function_naming": false,
            "fallback_implementation": false,
            "pattern_factory_docstring": false
          },
          "checks_recommandees": {
            "async_methods_present": false,
            "logging_pattern_factory": false,
            "configuration_pattern": false,
            "error_handling_pattern": true,
            "main_function_pattern": false
          },
          "score_obligatoire": 0.0,
          "score_recommande": 20.0,
          "score_global": 4.0,
          "recommendations": [
            "CRITIQUE: Ajouter import Pattern Factory standard avec fallback",
            "CRITIQUE: Corriger héritage strict de la classe Agent",
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "CRITIQUE: Implémenter fallback Pattern Factory obligatoire",
            "CRITIQUE: Ajouter documentation Pattern Factory",
            "RECOMMANDÉ: Implémenter toutes les méthodes async",
            "RECOMMANDÉ: Améliorer logging Pattern Factory standardisé",
            "RECOMMANDÉ: Implémenter pattern de configuration",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: NON_CONFORME_CRITIQUE (4.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": false,
            "shutdown": false,
            "health_check": false,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 0.0,
          "message": "Méthodes obligatoires: 0.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 17.42,
            "lines_count": 483,
            "code_lines": 330,
            "functions_count": 11,
            "classes_count": 1
          },
          "score": 89.0,
          "message": "Performance: 89.0/100"
        }
      },
      "score_global": 38.4,
      "status": "warning"
    },
    "docs\\agents_postgresql_resolution\\agent team\\agent_workspace_organizer.py": {
      "agent_path": "docs\\agents_postgresql_resolution\\agent team\\agent_workspace_organizer.py",
      "timestamp": "2025-06-19T16:42:31.589187",
      "tests": {
        "syntax": {
          "success": true,
          "message": "Syntaxe Python valide",
          "score": 100
        },
        "pattern_factory": {
          "success": false,
          "conformite_level": "NON_CONFORME_CRITIQUE",
          "checks_obligatoires": {
            "pattern_factory_import_correct": false,
            "agent_inheritance_strict": false,
            "factory_function_naming": false,
            "fallback_implementation": false,
            "pattern_factory_docstring": false
          },
          "checks_recommandees": {
            "async_methods_present": false,
            "logging_pattern_factory": false,
            "configuration_pattern": false,
            "error_handling_pattern": true,
            "main_function_pattern": false
          },
          "score_obligatoire": 0.0,
          "score_recommande": 20.0,
          "score_global": 4.0,
          "recommendations": [
            "CRITIQUE: Ajouter import Pattern Factory standard avec fallback",
            "CRITIQUE: Corriger héritage strict de la classe Agent",
            "CRITIQUE: Ajouter fonction factory avec nomenclature correcte",
            "CRITIQUE: Implémenter fallback Pattern Factory obligatoire",
            "CRITIQUE: Ajouter documentation Pattern Factory",
            "RECOMMANDÉ: Implémenter toutes les méthodes async",
            "RECOMMANDÉ: Améliorer logging Pattern Factory standardisé",
            "RECOMMANDÉ: Implémenter pattern de configuration",
            "RECOMMANDÉ: Ajouter fonction main() conforme"
          ],
          "message": "Conformité Pattern Factory: NON_CONFORME_CRITIQUE (4.0%)"
        },
        "required_methods": {
          "success": false,
          "methodes_trouvees": {
            "startup": false,
            "shutdown": false,
            "health_check": false,
            "execute_task": false,
            "get_capabilities": false
          },
          "score": 0.0,
          "message": "Méthodes obligatoires: 0.0%"
        },
        "performance": {
          "success": true,
          "metrics": {
            "file_size_kb": 19.55,
            "lines_count": 573,
            "code_lines": 374,
            "functions_count": 12,
            "classes_count": 1
          },
          "score": 88.0,
          "message": "Performance: 88.0/100"
        }
      },
      "score_global": 38.2,
      "status": "warning"
    }
  },
  "performance_metrics": {},
  "last_update": "2025-06-19T16:42:31.593180"
}