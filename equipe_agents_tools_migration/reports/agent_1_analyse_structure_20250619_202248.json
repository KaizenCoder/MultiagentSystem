{
  "agent": "Agent 1 - Analyseur Structure",
  "model": "Claude Sonnet 4",
  "timestamp": "2025-06-19T20:22:48.461279",
  "duree_secondes": 0.104571,
  "source_path": "C:\\Dev\\SuperWhisper_V6\\tools",
  "status": "SUCCESS",
  "structure_complete": {
    "repertoires": {
      ".": {
        "path": ".",
        "nombre_fichiers": 2,
        "sous_repertoires": [
          "automation",
          "conversion",
          "demo",
          "download",
          "exploration",
          "generation",
          "installation",
          "memory",
          "monitoring",
          "portability",
          "promotion",
          "resume",
          "sandbox",
          "solutions",
          "testing",
          "validation",
          "__pycache__"
        ],
        "fichiers": [
          {
            "nom": "INDEX_OUTILS.md",
            "extension": ".md",
            "taille": 9173,
            "modifie": "2025-06-15T01:43:18.404878"
          },
          {
            "nom": "README.md",
            "extension": ".md",
            "taille": 5337,
            "modifie": "2025-06-15T00:28:46.845687"
          }
        ]
      },
      "automation": {
        "path": "automation",
        "nombre_fichiers": 2,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "auto_fix_new_scripts.py",
            "extension": ".py",
            "taille": 10155,
            "modifie": "2025-06-15T00:21:27.013205"
          },
          {
            "nom": "README_NOUVEAUX_FICHIERS.md",
            "extension": ".md",
            "taille": 3633,
            "modifie": "2025-06-15T00:22:13.791773"
          }
        ]
      },
      "conversion": {
        "path": "conversion",
        "nombre_fichiers": 1,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "convertir_fichiers_pcm_wav.py",
            "extension": ".py",
            "taille": 12666,
            "modifie": "2025-06-15T00:18:45.681708"
          }
        ]
      },
      "demo": {
        "path": "demo",
        "nombre_fichiers": 2,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "demo_improvements.py",
            "extension": ".py",
            "taille": 19863,
            "modifie": "2025-06-15T00:18:45.683699"
          },
          {
            "nom": "demo_security_sprint1.py",
            "extension": ".py",
            "taille": 15399,
            "modifie": "2025-06-15T00:18:45.686202"
          }
        ]
      },
      "download": {
        "path": "download",
        "nombre_fichiers": 1,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "download_tts_model.py",
            "extension": ".py",
            "taille": 6770,
            "modifie": "2025-06-15T00:18:45.687711"
          }
        ]
      },
      "exploration": {
        "path": "exploration",
        "nombre_fichiers": 1,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "explore_piper_api.py",
            "extension": ".py",
            "taille": 5627,
            "modifie": "2025-06-15T00:18:45.689716"
          }
        ]
      },
      "generation": {
        "path": "generation",
        "nombre_fichiers": 4,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "generateur_aide_externe.py",
            "extension": ".py",
            "taille": 13406,
            "modifie": "2025-06-15T00:18:45.912056"
          },
          {
            "nom": "generer_fichier_complet_optimise.py",
            "extension": ".py",
            "taille": 6616,
            "modifie": "2025-06-15T00:18:45.691717"
          },
          {
            "nom": "generer_tests_validation_complexes.py",
            "extension": ".py",
            "taille": 13005,
            "modifie": "2025-06-15T00:18:45.693716"
          },
          {
            "nom": "README_OUTIL_AIDE_EXTERNE.md",
            "extension": ".md",
            "taille": 4728,
            "modifie": "2025-06-13T15:26:57.643279"
          }
        ]
      },
      "installation": {
        "path": "installation",
        "nombre_fichiers": 1,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "install_phase3_dependencies.py",
            "extension": ".py",
            "taille": 13691,
            "modifie": "2025-06-15T00:18:45.694724"
          }
        ]
      },
      "memory": {
        "path": "memory",
        "nombre_fichiers": 1,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "memory_leak_v4.py",
            "extension": ".py",
            "taille": 31492,
            "modifie": "2025-06-11T23:28:32.797705"
          }
        ]
      },
      "monitoring": {
        "path": "monitoring",
        "nombre_fichiers": 2,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "monitor_phase3.py",
            "extension": ".py",
            "taille": 18992,
            "modifie": "2025-06-15T00:18:45.697233"
          },
          {
            "nom": "monitor_phase3_demo.py",
            "extension": ".py",
            "taille": 9294,
            "modifie": "2025-06-15T00:18:45.698733"
          }
        ]
      },
      "portability": {
        "path": "portability",
        "nombre_fichiers": 3,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "make_scripts_portable.py",
            "extension": ".py",
            "taille": 17866,
            "modifie": "2025-06-15T00:18:36.118146"
          },
          {
            "nom": "README_PORTABILITE_SCRIPTS.md",
            "extension": ".md",
            "taille": 14290,
            "modifie": "2025-06-15T00:27:00.881710"
          },
          {
            "nom": "README_SCRIPTS_PORTABLES.md",
            "extension": ".md",
            "taille": 8914,
            "modifie": "2025-06-15T00:19:36.754977"
          }
        ]
      },
      "promotion": {
        "path": "promotion",
        "nombre_fichiers": 2,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "promote_test.py",
            "extension": ".py",
            "taille": 11794,
            "modifie": "2025-06-15T00:18:45.915055"
          },
          {
            "nom": "README_PROMOTION_TESTS.md",
            "extension": ".md",
            "taille": 7332,
            "modifie": "2025-06-15T00:16:00.121939"
          }
        ]
      },
      "resume": {
        "path": "resume",
        "nombre_fichiers": 1,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "resume_tests_validation_complexes.py",
            "extension": ".py",
            "taille": 7970,
            "modifie": "2025-06-15T00:18:45.700738"
          }
        ]
      },
      "sandbox": {
        "path": "sandbox",
        "nombre_fichiers": 2,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "clean_sandbox.py",
            "extension": ".py",
            "taille": 10360,
            "modifie": "2025-06-15T00:18:45.910057"
          },
          {
            "nom": "README_CLEAN_SANDBOX.md",
            "extension": ".md",
            "taille": 6373,
            "modifie": "2025-06-15T00:05:06.318000"
          }
        ]
      },
      "solutions": {
        "path": "solutions",
        "nombre_fichiers": 1,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "solution_memory_leak_gpu_v3_stable.py",
            "extension": ".py",
            "taille": 11323,
            "modifie": "2025-06-15T00:18:45.710355"
          }
        ]
      },
      "testing": {
        "path": "testing",
        "nombre_fichiers": 7,
        "sous_repertoires": [
          "stt"
        ],
        "fichiers": [
          {
            "nom": "run_assistant.py",
            "extension": ".py",
            "taille": 12012,
            "modifie": "2025-06-15T00:18:45.703731"
          },
          {
            "nom": "run_assistant_coqui.py",
            "extension": ".py",
            "taille": 4822,
            "modifie": "2025-06-15T00:18:45.705732"
          },
          {
            "nom": "run_assistant_simple.py",
            "extension": ".py",
            "taille": 4695,
            "modifie": "2025-06-15T00:18:45.707241"
          },
          {
            "nom": "run_complete_tests.py",
            "extension": ".py",
            "taille": 16151,
            "modifie": "2025-06-15T00:18:45.709350"
          },
          {
            "nom": "test_pipeline_voice_validation_final.py",
            "extension": ".py",
            "taille": 18504,
            "modifie": "2025-06-15T00:18:45.713344"
          },
          {
            "nom": "test_pipeline_voice_validation_real.py",
            "extension": ".py",
            "taille": 20513,
            "modifie": "2025-06-15T00:18:45.715342"
          },
          {
            "nom": "test_pipeline_voice_validation_working.py",
            "extension": ".py",
            "taille": 15487,
            "modifie": "2025-06-15T00:18:45.717873"
          }
        ]
      },
      "testing\\stt": {
        "path": "testing\\stt",
        "nombre_fichiers": 3,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "test_stt_validation_individual.py",
            "extension": ".py",
            "taille": 15825,
            "modifie": "2025-06-15T00:18:45.719676"
          },
          {
            "nom": "test_stt_validation_transmission.py",
            "extension": ".py",
            "taille": 18103,
            "modifie": "2025-06-15T00:18:45.722683"
          },
          {
            "nom": "test_tts_validation_transmission.py",
            "extension": ".py",
            "taille": 7861,
            "modifie": "2025-06-15T00:18:45.723676"
          }
        ]
      },
      "validation": {
        "path": "validation",
        "nombre_fichiers": 1,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "validate_gpu_config.py",
            "extension": ".py",
            "taille": 26191,
            "modifie": "2025-06-15T00:18:45.726171"
          }
        ]
      },
      "__pycache__": {
        "path": "__pycache__",
        "nombre_fichiers": 1,
        "sous_repertoires": [],
        "fichiers": [
          {
            "nom": "generateur_aide_externe.cpython-312.pyc",
            "extension": ".pyc",
            "taille": 13330,
            "modifie": "2025-06-13T15:27:43.642487"
          }
        ]
      }
    },
    "fichiers_par_type": {
      ".md": 8,
      ".py": 29,
      ".pyc": 1
    },
    "taille_totale": 469563,
    "nombre_fichiers": 38
  },
  "fichiers_python": [
    {
      "path": "automation\\auto_fix_new_scripts.py",
      "nom": "auto_fix_new_scripts.py",
      "taille": 9747,
      "lignes": 269,
      "imports": [
        "os",
        "sys",
        "time",
        "pathlib",
        "subprocess",
        "argparse",
        "json",
        "datetime",
        "typing",
        "watchdog.observers",
        "watchdog.events"
      ],
      "fonctions": [
        "watch_directory",
        "install_git_hook",
        "fix_recent_scripts",
        "fix_staged_files",
        "main",
        "__init__",
        "on_created",
        "on_modified",
        "_process_file"
      ],
      "classes": [
        "PythonFileHandler"
      ],
      "docstring": "\n🔄 Auto-Fix Nouveaux Scripts - SuperWhisper V6\n\nSurveille et rend automatiquement portables les nouveaux scripts Python\ncréés dans le projet, avec intégration Git hooks et surveillance continue.\n\nUsage:\n    python tools/auto_fix_new_scripts.py --watch          # Surveillance continue\n    python tools/auto_fix_new_scripts.py --git-hook       # Installation Git hook\n    python tools/auto_fix_new_scripts.py --fix-recent     # Fix scripts récents (24h)\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 269,
        "lignes_code": 196,
        "lignes_commentaires": 17,
        "lignes_vides": 56,
        "indentation_max": 20
      },
      "type_outil": "cli_tool"
    },
    {
      "path": "conversion\\convertir_fichiers_pcm_wav.py",
      "nom": "convertir_fichiers_pcm_wav.py",
      "taille": 12098,
      "lignes": 339,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "pathlib",
        "shutil",
        "TTS.utils_audio"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "convertir_fichiers_pcm_wav",
        "tester_fichiers_convertis",
        "convertir_fichier_principal"
      ],
      "classes": [],
      "docstring": "\nConversion fichiers PCM → WAV - SuperWhisper V6 TTS\nConvertit tous les fichiers audio invalides en format WAV standard\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 339,
        "lignes_code": 223,
        "lignes_commentaires": 39,
        "lignes_vides": 77,
        "indentation_max": 28
      },
      "type_outil": "test_script"
    },
    {
      "path": "demo\\demo_improvements.py",
      "nom": "demo_improvements.py",
      "taille": 18927,
      "lignes": 482,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "asyncio",
        "numpy",
        "time",
        "json",
        "logging",
        "pathlib",
        "sys",
        "config.security_config",
        "utils.error_handler",
        "Orchestrator.master_handler_robust",
        "shutil",
        "traceback"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "format",
        "__init__",
        "demo_api_key_management",
        "demo_input_validation",
        "_create_wav_audio",
        "__init__",
        "_generate_speech_signal"
      ],
      "classes": [
        "ColoredFormatter",
        "LuxaSecurityDemo",
        "LuxaRobustnessDemo",
        "LuxaPerformanceDemo",
        "LuxaIntegrationDemo"
      ],
      "docstring": "\nScript de Validation Complète - Luxa SuperWhisper V6\n===================================================\n\nDémonstrateur des améliorations de sécurité, robustesse et performance.\nCe script illustre toutes les corrections apportées suite au peer review.\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 482,
        "lignes_code": 319,
        "lignes_commentaires": 50,
        "lignes_vides": 113,
        "indentation_max": 20
      },
      "type_outil": "utility"
    },
    {
      "path": "demo\\demo_security_sprint1.py",
      "nom": "demo_security_sprint1.py",
      "taille": 14753,
      "lignes": 371,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "asyncio",
        "requests",
        "time",
        "json",
        "pathlib",
        "config.security_config"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "print_section",
        "print_test",
        "test_api_endpoints",
        "test_security_performance",
        "generate_security_report"
      ],
      "classes": [],
      "docstring": "\nDémonstration Sécurité LUXA SuperWhisper V6 - Sprint 1\nScript de test complet des fonctionnalités sécurisées\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 371,
        "lignes_code": 272,
        "lignes_commentaires": 41,
        "lignes_vides": 58,
        "indentation_max": 12
      },
      "type_outil": "test_script"
    },
    {
      "path": "download\\download_tts_model.py",
      "nom": "download_tts_model.py",
      "taille": 6453,
      "lignes": 178,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "requests",
        "pathlib",
        "urllib.parse",
        "shutil",
        "shutil",
        "traceback"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "download_file",
        "main"
      ],
      "classes": [],
      "docstring": "\nScript de téléchargement du modèle TTS fr_FR-siwis-medium.onnx\nBasé sur la transmission du coordinateur du 10 juin 2025\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 178,
        "lignes_code": 123,
        "lignes_commentaires": 19,
        "lignes_vides": 36,
        "indentation_max": 24
      },
      "type_outil": "download"
    },
    {
      "path": "exploration\\explore_piper_api.py",
      "nom": "explore_piper_api.py",
      "taille": 5411,
      "lignes": 156,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "importlib",
        "pkgutil",
        "subprocess",
        "os",
        "piper",
        "os",
        "traceback"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "explore_piper",
        "test_piper_cli"
      ],
      "classes": [],
      "docstring": "\nExploration de l'API Piper pour découvrir la bonne utilisation\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 156,
        "lignes_code": 110,
        "lignes_commentaires": 17,
        "lignes_vides": 29,
        "indentation_max": 24
      },
      "type_outil": "test_script"
    },
    {
      "path": "generation\\generateur_aide_externe.py",
      "nom": "generateur_aide_externe.py",
      "taille": 12847,
      "lignes": 361,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "pathlib",
        "datetime",
        "typing",
        "json",
        "argparse"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "main",
        "__init__",
        "creer_aide_externe",
        "_collecter_code_essentiel",
        "_extraire_code_pertinent",
        "_extraire_python_essentiel",
        "_generer_document_principal",
        "_generer_titre_section",
        "_generer_recap"
      ],
      "classes": [
        "GenerateurAideExterne"
      ],
      "docstring": "\nGénérateur d'aide externe SuperWhisper V6\nOutil pour créer des demandes d'aide avec code essentiel agrégé en .md\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 361,
        "lignes_code": 236,
        "lignes_commentaires": 42,
        "lignes_vides": 83,
        "indentation_max": 34
      },
      "type_outil": "cli_tool"
    },
    {
      "path": "generation\\generer_fichier_complet_optimise.py",
      "nom": "generer_fichier_complet_optimise.py",
      "taille": 6343,
      "lignes": 162,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "asyncio",
        "yaml",
        "time",
        "pathlib",
        "TTS.tts_manager",
        "TTS.utils_audio"
      ],
      "fonctions": [
        "_setup_portable_environment"
      ],
      "classes": [],
      "docstring": "\nGénération fichier complet optimisé - SuperWhisper V6 TTS\nContourne la limitation de 1000 caractères en utilisant SAPI directement\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 162,
        "lignes_code": 101,
        "lignes_commentaires": 24,
        "lignes_vides": 37,
        "indentation_max": 12
      },
      "type_outil": "test_script"
    },
    {
      "path": "generation\\generer_tests_validation_complexes.py",
      "nom": "generer_tests_validation_complexes.py",
      "taille": 12469,
      "lignes": 328,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "asyncio",
        "yaml",
        "time",
        "pathlib",
        "TTS.tts_manager",
        "TTS.utils_audio",
        "TTS.tts_manager"
      ],
      "fonctions": [
        "_setup_portable_environment"
      ],
      "classes": [],
      "docstring": "\nGénération tests validation complexes - SuperWhisper V6 TTS\nGénère des fichiers audio avec textes de validation de complexité croissante\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 328,
        "lignes_code": 233,
        "lignes_commentaires": 33,
        "lignes_vides": 62,
        "indentation_max": 20
      },
      "type_outil": "test_script"
    },
    {
      "path": "installation\\install_phase3_dependencies.py",
      "nom": "install_phase3_dependencies.py",
      "taille": 13092,
      "lignes": 366,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "subprocess",
        "logging",
        "pathlib",
        "pip",
        "torch",
        "piper",
        "TTS.utils_audio"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "main",
        "__init__",
        "run_installation",
        "_check_environment",
        "_install_piper_binding",
        "_install_piper_alternative",
        "_install_audio_dependencies",
        "_install_performance_tools",
        "_validate_installation",
        "_generate_report",
        "_generate_error_report"
      ],
      "classes": [
        "Phase3DependencyInstaller"
      ],
      "docstring": "\nInstallation des Dépendances Phase 3 - SuperWhisper V6 TTS\nInstallation automatique du binding Python Piper et autres optimisations\n🚀 Prérequis pour les optimisations de performance\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 366,
        "lignes_code": 261,
        "lignes_commentaires": 33,
        "lignes_vides": 72,
        "indentation_max": 20
      },
      "type_outil": "test_script"
    },
    {
      "path": "memory\\memory_leak_v4.py",
      "nom": "memory_leak_v4.py",
      "taille": 30425,
      "lignes": 732,
      "imports": [
        "os",
        "sys",
        "torch",
        "gc",
        "threading",
        "contextlib",
        "functools",
        "signal",
        "typing",
        "time",
        "traceback",
        "platform",
        "json",
        "datetime",
        "multiprocessing",
        "multiprocessing",
        "tempfile",
        "pathlib",
        "errno",
        "fcntl",
        "sys"
      ],
      "fonctions": [
        "get_process_manager",
        "gpu_test_cleanup",
        "gpu_memory_monitor",
        "validate_no_memory_leak",
        "emergency_gpu_reset",
        "get_detailed_gpu_report",
        "configure_for_environment",
        "test_load_model_with_cleanup",
        "run_parallel_tests_with_cleanup",
        "stress_test_memory_management",
        "__init__",
        "acquire",
        "release",
        "__init__",
        "_init_multiprocess_lock",
        "_validate_gpu",
        "get_memory_stats",
        "_timeout_handler_unix",
        "_execute_with_timeout",
        "force_cleanup",
        "_log_json_event",
        "export_json_logs",
        "gpu_context",
        "decorator",
        "decorator",
        "__init__",
        "update_metrics",
        "export_prometheus_format",
        "wrapper",
        "wrapper",
        "run_func"
      ],
      "classes": [
        "FileLock",
        "GPUMemoryManager",
        "PrometheusMetrics"
      ],
      "docstring": null,
      "complexite": {
        "lignes_totales": 732,
        "lignes_code": 523,
        "lignes_commentaires": 79,
        "lignes_vides": 130,
        "indentation_max": 24
      },
      "type_outil": "cli_tool"
    },
    {
      "path": "monitoring\\monitor_phase3.py",
      "nom": "monitor_phase3.py",
      "taille": 18257,
      "lignes": 464,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "asyncio",
        "logging",
        "time",
        "json",
        "pathlib",
        "datetime",
        "collections",
        "threading",
        "TTS.tts_manager",
        "TTS.utils_audio",
        "yaml"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "__init__",
        "_estimate_backend_used",
        "_print_live_metrics",
        "_generate_monitoring_report",
        "_save_metrics_to_file"
      ],
      "classes": [
        "Phase3Monitor"
      ],
      "docstring": "\nMonitoring Phase 3 - SuperWhisper V6 TTS\nSurveillance en temps réel des métriques de performance\n🚀 Dashboard des optimisations Phase 3\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 464,
        "lignes_code": 329,
        "lignes_commentaires": 52,
        "lignes_vides": 83,
        "indentation_max": 20
      },
      "type_outil": "interface_web"
    },
    {
      "path": "monitoring\\monitor_phase3_demo.py",
      "nom": "monitor_phase3_demo.py",
      "taille": 8898,
      "lignes": 245,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "asyncio",
        "logging",
        "time",
        "json",
        "pathlib",
        "datetime",
        "collections",
        "TTS.tts_manager",
        "yaml"
      ],
      "fonctions": [
        "_setup_portable_environment"
      ],
      "classes": [],
      "docstring": "\nMonitoring Phase 3 DEMO - SuperWhisper V6 TTS\nDémonstration courte (1 minute) du monitoring en temps réel\n🚀 Validation rapide des optimisations Phase 3\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 245,
        "lignes_code": 164,
        "lignes_commentaires": 30,
        "lignes_vides": 51,
        "indentation_max": 20
      },
      "type_outil": "test_script"
    },
    {
      "path": "portability\\make_scripts_portable.py",
      "nom": "make_scripts_portable.py",
      "taille": 17174,
      "lignes": 509,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "shutil",
        "argparse",
        "re",
        "typing"
      ],
      "fonctions": [
        "find_python_scripts",
        "is_script_file",
        "analyze_script_dependencies",
        "has_portable_header",
        "make_script_portable",
        "extract_docstring",
        "find_code_start",
        "create_launcher_script",
        "scan_and_fix_all_scripts",
        "main"
      ],
      "classes": [],
      "docstring": "\n🚀 Utilitaire de Portabilité Scripts - SuperWhisper V6\n\nRend tous les scripts Python exécutables depuis n'importe quel répertoire\nen résolvant automatiquement les chemins et imports.\n\nUsage:\n    python tools/make_scripts_portable.py --scan-all\n    python tools/make_scripts_portable.py --fix-script path/to/script.py\n    python tools/make_scripts_portable.py --create-launcher script.py\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 509,
        "lignes_code": 356,
        "lignes_commentaires": 48,
        "lignes_vides": 105,
        "indentation_max": 23
      },
      "type_outil": "cli_tool"
    },
    {
      "path": "promotion\\promote_test.py",
      "nom": "promote_test.py",
      "taille": 11302,
      "lignes": 323,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "shutil",
        "pathlib",
        "argparse",
        "datetime"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "validate_source_file",
        "validate_target_dir",
        "generate_target_filename",
        "update_test_header",
        "promote_test",
        "main"
      ],
      "classes": [],
      "docstring": "\n🚀 Script de Promotion de Tests - SuperWhisper V6\n\nUtilitaire pour promouvoir des tests depuis répertoires temporaires\nvers répertoires stables (unit/ ou integration/).\n\nUsage:\n    python tools/promote_test.py .cursor-tmp/scratch_test.py tests/unit/\n    python tools/promote_test.py tests/sandbox/experiment.py tests/integration/\n    python tools/promote_test.py .cursor-tmp/temp_stt.py tests/unit/ --rename=test_stt_optimized.py\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 323,
        "lignes_code": 214,
        "lignes_commentaires": 37,
        "lignes_vides": 72,
        "indentation_max": 23
      },
      "type_outil": "cli_tool"
    },
    {
      "path": "resume\\resume_tests_validation_complexes.py",
      "nom": "resume_tests_validation_complexes.py",
      "taille": 7632,
      "lignes": 202,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "pathlib",
        "TTS.utils_audio"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "analyser_fichiers_validation"
      ],
      "classes": [],
      "docstring": "\nRésumé final des tests validation complexes - SuperWhisper V6 TTS\nAnalyse et présente tous les fichiers générés avec leurs caractéristiques\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 202,
        "lignes_code": 143,
        "lignes_commentaires": 18,
        "lignes_vides": 41,
        "indentation_max": 24
      },
      "type_outil": "test_script"
    },
    {
      "path": "sandbox\\clean_sandbox.py",
      "nom": "clean_sandbox.py",
      "taille": 9956,
      "lignes": 270,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "time",
        "pathlib",
        "shutil",
        "argparse",
        "datetime",
        "typing"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "get_file_age_days",
        "find_old_files",
        "clean_pycache",
        "clean_sandbox_directory",
        "main"
      ],
      "classes": [],
      "docstring": "\n🧹 Script de Purge Automatique - Tests Sandbox SuperWhisper V6\n\nSupprime automatiquement les tests exploratoires vieux de plus de 7 jours\ndans les répertoires sandbox pour maintenir la propreté du dépôt.\n\nUsage:\n    python tools/clean_sandbox.py              # Purge automatique\n    python tools/clean_sandbox.py --dry-run    # Simulation sans suppression\n    python tools/clean_sandbox.py --days=14    # Seuil personnalisé (14 jours)\n    python tools/clean_sandbox.py --force      # Purge tout sans confirmation\n\nRépertoires surveillés:\n    - tests/sandbox/\n    - PIPELINE/tests/sandbox/\n    - .cursor-tmp/\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 270,
        "lignes_code": 194,
        "lignes_commentaires": 24,
        "lignes_vides": 52,
        "indentation_max": 26
      },
      "type_outil": "cli_tool"
    },
    {
      "path": "solutions\\solution_memory_leak_gpu_v3_stable.py",
      "nom": "solution_memory_leak_gpu_v3_stable.py",
      "taille": 10852,
      "lignes": 302,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "torch",
        "gc",
        "threading",
        "contextlib",
        "functools",
        "typing",
        "time",
        "traceback"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "gpu_test_cleanup",
        "validate_no_memory_leak",
        "emergency_gpu_reset",
        "test_simple_model",
        "run_simple_tests",
        "__init__",
        "_validate_gpu",
        "_initialize_baseline",
        "get_memory_stats",
        "_force_cleanup_internal",
        "force_cleanup",
        "gpu_context",
        "decorator",
        "wrapper"
      ],
      "classes": [
        "GPUMemoryManager"
      ],
      "docstring": "\nSOLUTION MEMORY LEAK GPU V3 - SuperWhisper V6 [STABLE WINDOWS]\n🚨 CONFIGURATION: RTX 3090 CUDA:1 - Version simplifiée sans blocages\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 302,
        "lignes_code": 208,
        "lignes_commentaires": 32,
        "lignes_vides": 62,
        "indentation_max": 20
      },
      "type_outil": "test_script"
    },
    {
      "path": "testing\\run_assistant.py",
      "nom": "run_assistant.py",
      "taille": 11217,
      "lignes": 326,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "argparse",
        "asyncio",
        "os",
        "sys",
        "time",
        "logging",
        "pathlib",
        "yaml",
        "STT.stt_manager_robust",
        "STT.vad_manager",
        "LLM.llm_manager_enhanced",
        "TTS.tts_handler",
        "Orchestrator.master_handler_robust",
        "numpy"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "parse_arguments",
        "print_banner"
      ],
      "classes": [],
      "docstring": "\nLuxa - SuperWhisper_V6 Assistant v1.1\n======================================\n\nAssistant vocal intelligent avec pipeline STT → LLM → TTS\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 326,
        "lignes_code": 230,
        "lignes_commentaires": 32,
        "lignes_vides": 64,
        "indentation_max": 24
      },
      "type_outil": "cli_tool"
    },
    {
      "path": "testing\\run_assistant_coqui.py",
      "nom": "run_assistant_coqui.py",
      "taille": 4599,
      "lignes": 130,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "yaml",
        "os",
        "sys",
        "asyncio",
        "STT.stt_handler",
        "LLM.llm_manager_enhanced",
        "LUXA_TTS.tts_handler_coqui"
      ],
      "fonctions": [
        "_setup_portable_environment"
      ],
      "classes": [],
      "docstring": "\nScript Portable - run_assistant_coqui.py\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 130,
        "lignes_code": 82,
        "lignes_commentaires": 20,
        "lignes_vides": 28,
        "indentation_max": 24
      },
      "type_outil": "test_script"
    },
    {
      "path": "testing\\run_assistant_simple.py",
      "nom": "run_assistant_simple.py",
      "taille": 4479,
      "lignes": 130,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "yaml",
        "os",
        "sys",
        "asyncio",
        "STT.stt_handler",
        "LLM.llm_manager_enhanced",
        "TTS.tts_handler"
      ],
      "fonctions": [
        "_setup_portable_environment"
      ],
      "classes": [],
      "docstring": "\nScript Portable - run_assistant_simple.py\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 130,
        "lignes_code": 84,
        "lignes_commentaires": 20,
        "lignes_vides": 26,
        "indentation_max": 24
      },
      "type_outil": "utility"
    },
    {
      "path": "testing\\run_complete_tests.py",
      "nom": "run_complete_tests.py",
      "taille": 15537,
      "lignes": 409,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "subprocess",
        "time",
        "json",
        "pathlib",
        "datetime",
        "torch",
        "traceback"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "main",
        "__init__",
        "log",
        "run_command",
        "run_pytest_tests",
        "run_demo_batch",
        "run_performance_tests",
        "check_system_requirements",
        "generate_report",
        "run_all_tests"
      ],
      "classes": [
        "TTSTestSuite"
      ],
      "docstring": "\nScript d'Exécution Complète des Tests TTS - SuperWhisper V6\nOrchestration de tous les tests : pytest, démonstration, monitoring\n🧪 Suite complète de validation Phase 3\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 409,
        "lignes_code": 302,
        "lignes_commentaires": 35,
        "lignes_vides": 72,
        "indentation_max": 28
      },
      "type_outil": "cli_tool"
    },
    {
      "path": "testing\\test_pipeline_voice_validation_final.py",
      "nom": "test_pipeline_voice_validation_final.py",
      "taille": 17696,
      "lignes": 473,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "time",
        "json",
        "asyncio",
        "argparse",
        "datetime",
        "pathlib",
        "typing",
        "numpy",
        "sounddevice",
        "torch",
        "tempfile",
        "wave",
        "subprocess",
        "uuid",
        "traceback",
        "traceback",
        "time"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "validate_rtx3090_configuration",
        "_to_int16",
        "_write_log",
        "__init__",
        "__init__",
        "__init__",
        "speak",
        "__init__"
      ],
      "classes": [
        "MockSTTManager",
        "MockLLMClient",
        "ValidatedTTSHandler",
        "STTResult"
      ],
      "docstring": "\nTest de validation pipeline voix-à-voix SuperWhisper V6 - AVEC TTS RÉEL VALIDÉ\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\nUtilise le modèle TTS validé fr_FR-siwis-medium.onnx disponible dans D:\\TTS_Voices\\piper\nBasé sur la transmission du coordinateur du 10/06/2025 - TTS déjà validé\n\nTest interactif complet: STT → LLM → TTS → Audio avec validation humaine\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 473,
        "lignes_code": 347,
        "lignes_commentaires": 42,
        "lignes_vides": 84,
        "indentation_max": 32
      },
      "type_outil": "cli_tool"
    },
    {
      "path": "testing\\test_pipeline_voice_validation_real.py",
      "nom": "test_pipeline_voice_validation_real.py",
      "taille": 19645,
      "lignes": 526,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "time",
        "json",
        "asyncio",
        "argparse",
        "datetime",
        "pathlib",
        "typing",
        "numpy",
        "sounddevice",
        "torch",
        "tts_handler",
        "tempfile",
        "wave",
        "subprocess",
        "win32com.client",
        "tempfile",
        "wave",
        "traceback"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "validate_rtx3090_configuration",
        "_to_int16",
        "_write_log",
        "__init__",
        "__init__",
        "__init__",
        "speak",
        "_capture_tts_output",
        "_fallback_sapi_tts",
        "_simulate_tts",
        "__init__"
      ],
      "classes": [
        "MockSTTManager",
        "MockLLMClient",
        "RealTTSHandler",
        "STTResult"
      ],
      "docstring": "\nTest de validation pipeline voix-à-voix SuperWhisper V6 - AVEC TTS RÉEL\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\nUtilise le TTSHandler validé de la transmission du coordinateur (10/06/2025)\navec fallback intelligent si modèles non disponibles.\n\nTest interactif complet: STT → LLM → TTS → Audio avec validation humaine\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 526,
        "lignes_code": 374,
        "lignes_commentaires": 51,
        "lignes_vides": 101,
        "indentation_max": 24
      },
      "type_outil": "cli_tool"
    },
    {
      "path": "testing\\test_pipeline_voice_validation_working.py",
      "nom": "test_pipeline_voice_validation_working.py",
      "taille": 14824,
      "lignes": 401,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "time",
        "json",
        "asyncio",
        "argparse",
        "datetime",
        "pathlib",
        "typing",
        "numpy",
        "sounddevice",
        "torch",
        "win32com.client",
        "tempfile",
        "wave",
        "traceback"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "validate_rtx3090_configuration",
        "_to_int16",
        "_write_log",
        "__init__",
        "__init__",
        "__init__",
        "speak",
        "_simulate_tts",
        "__init__"
      ],
      "classes": [
        "MockSTTManager",
        "MockLLMClient",
        "SAPITTSHandler",
        "STTResult"
      ],
      "docstring": "\nTest de validation pipeline voix-à-voix SuperWhisper V6 - VERSION FONCTIONNELLE\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\nBasé sur:\n- Transmission coordinateur 10/06/2025 (TTS validé)\n- Journal développement Phase 3 TTS (performance exceptionnelle)\n- Architecture réelle du projet SuperWhisper V6\n\nTest interactif complet: STT → LLM → TTS → Audio avec validation humaine\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 401,
        "lignes_code": 282,
        "lignes_commentaires": 44,
        "lignes_vides": 75,
        "indentation_max": 24
      },
      "type_outil": "cli_tool"
    },
    {
      "path": "testing\\stt\\test_stt_validation_individual.py",
      "nom": "test_stt_validation_individual.py",
      "taille": 15171,
      "lignes": 397,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "time",
        "json",
        "asyncio",
        "datetime",
        "pathlib",
        "typing",
        "numpy",
        "sounddevice",
        "torch",
        "STT.unified_stt_manager",
        "STT.backends.prism_stt_backend"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "main",
        "__init__",
        "validate_rtx3090",
        "test_audio_devices",
        "test_prism_stt_backend",
        "test_unified_stt_manager",
        "run_validation_tests"
      ],
      "classes": [
        "STTModelTester"
      ],
      "docstring": "\nTest de validation STT individuelle SuperWhisper V6\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\nObjectif: Sélectionner et valider le modèle STT à retenir pour production\nBasé sur Phase 4 STT validée (journal développement 12/06/2025)\n\nTest des modèles STT disponibles avec validation humaine\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 397,
        "lignes_code": 283,
        "lignes_commentaires": 37,
        "lignes_vides": 77,
        "indentation_max": 20
      },
      "type_outil": "test_script"
    },
    {
      "path": "testing\\stt\\test_stt_validation_transmission.py",
      "nom": "test_stt_validation_transmission.py",
      "taille": 17393,
      "lignes": 445,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "time",
        "json",
        "asyncio",
        "datetime",
        "pathlib",
        "typing",
        "numpy",
        "sounddevice",
        "torch"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "validate_rtx3090_configuration",
        "__init__",
        "validate_gpu_configuration",
        "validate_audio_devices",
        "performance_benchmark_transmission",
        "human_validation_stt_selection",
        "save_results",
        "print_summary"
      ],
      "classes": [
        "STTValidationTransmission"
      ],
      "docstring": "\nTest de validation STT basé sur la transmission du coordinateur du 10 juin 2025\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\nSpécifications STT de la transmission:\n- Moteur principal: insanely-fast-whisper\n- Fallback: faster-whisper  \n- VAD: Silero VAD avec fallback WebRTC\n- Objectif latence: < 500ms\n- Précision: > 95%\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 445,
        "lignes_code": 325,
        "lignes_commentaires": 30,
        "lignes_vides": 90,
        "indentation_max": 20
      },
      "type_outil": "test_script"
    },
    {
      "path": "testing\\stt\\test_tts_validation_transmission.py",
      "nom": "test_tts_validation_transmission.py",
      "taille": 7459,
      "lignes": 211,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "pathlib",
        "yaml",
        "json",
        "TTS.tts_handler",
        "torch",
        "traceback"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "validate_rtx3090_configuration",
        "test_tts_transmission_validation",
        "main"
      ],
      "classes": [],
      "docstring": "\nTest de validation TTS basé sur la transmission du coordinateur du 10 juin 2025\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 211,
        "lignes_code": 149,
        "lignes_commentaires": 22,
        "lignes_vides": 40,
        "indentation_max": 12
      },
      "type_outil": "test_script"
    },
    {
      "path": "validation\\validate_gpu_config.py",
      "nom": "validate_gpu_config.py",
      "taille": 25369,
      "lignes": 555,
      "imports": [
        "os",
        "sys",
        "pathlib",
        "re",
        "json",
        "yaml",
        "pathlib",
        "typing",
        "torch"
      ],
      "fonctions": [
        "_setup_portable_environment",
        "validate_rtx3090_configuration",
        "main",
        "__init__",
        "validate_project",
        "_has_cuda_visible_devices_1",
        "_validate_python_file",
        "_filter_safe_content",
        "_validate_config_file",
        "_validate_powershell_file",
        "_validate_special_files",
        "_validate_critical_files",
        "_generate_report",
        "print_report"
      ],
      "classes": [
        "GPUConfigValidator"
      ],
      "docstring": "\nValidateur de Configuration GPU - Luxa SuperWhisper V6 [VERSION RENFORCÉE]\n==========================================================================\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\nValide que tous les scripts du projet respectent les règles GPU obligatoires.\nBasé sur les leçons du triple contrôle de sécurité GPU.\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": {
        "lignes_totales": 555,
        "lignes_code": 392,
        "lignes_commentaires": 61,
        "lignes_vides": 102,
        "indentation_max": 28
      },
      "type_outil": "test_script"
    }
  ],
  "outils_detectes": [
    {
      "nom": "generateur_aide_externe.py",
      "path": "generation\\generateur_aide_externe.py",
      "type": "cli_tool",
      "description": "\nGénérateur d'aide externe SuperWhisper V6\nOutil pour créer des demandes d'aide avec code essentiel agrégé en .md\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 236,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "pathlib",
        "datetime",
        "typing",
        "json",
        "argparse"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "main",
        "__init__",
        "creer_aide_externe",
        "_collecter_code_essentiel"
      ],
      "score_utilite": 50
    },
    {
      "nom": "make_scripts_portable.py",
      "path": "portability\\make_scripts_portable.py",
      "type": "cli_tool",
      "description": "\n🚀 Utilitaire de Portabilité Scripts - SuperWhisper V6\n\nRend tous les scripts Python exécutables depuis n'importe quel répertoire\nen résolvant automatiquement les chemins et imports.\n\nUsage:\n    python tools/make_scripts_portable.py --scan-all\n    python tools/make_scripts_portable.py --fix-script path/to/script.py\n    python tools/make_scripts_portable.py --create-launcher script.py\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 356,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "shutil",
        "argparse",
        "re",
        "typing"
      ],
      "fonctions_principales": [
        "find_python_scripts",
        "is_script_file",
        "analyze_script_dependencies",
        "has_portable_header",
        "make_script_portable"
      ],
      "score_utilite": 50
    },
    {
      "nom": "run_complete_tests.py",
      "path": "testing\\run_complete_tests.py",
      "type": "cli_tool",
      "description": "\nScript d'Exécution Complète des Tests TTS - SuperWhisper V6\nOrchestration de tous les tests : pytest, démonstration, monitoring\n🧪 Suite complète de validation Phase 3\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 302,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "subprocess",
        "time",
        "json",
        "pathlib",
        "datetime",
        "torch",
        "traceback"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "main",
        "__init__",
        "log",
        "run_command"
      ],
      "score_utilite": 50
    },
    {
      "nom": "test_pipeline_voice_validation_real.py",
      "path": "testing\\test_pipeline_voice_validation_real.py",
      "type": "cli_tool",
      "description": "\nTest de validation pipeline voix-à-voix SuperWhisper V6 - AVEC TTS RÉEL\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\nUtilise le TTSHandler validé de la transmission du coordinateur (10/06/2025)\navec fallback intelligent si modèles non disponibles.\n\nTest interactif complet: STT → LLM → TTS → Audio avec validation humaine\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 374,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "time",
        "json",
        "asyncio",
        "argparse",
        "datetime",
        "pathlib",
        "typing",
        "numpy",
        "sounddevice",
        "torch",
        "tts_handler",
        "tempfile",
        "wave",
        "subprocess",
        "win32com.client",
        "tempfile",
        "wave",
        "traceback"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "validate_rtx3090_configuration",
        "_to_int16",
        "_write_log",
        "__init__"
      ],
      "score_utilite": 50
    },
    {
      "nom": "test_pipeline_voice_validation_working.py",
      "path": "testing\\test_pipeline_voice_validation_working.py",
      "type": "cli_tool",
      "description": "\nTest de validation pipeline voix-à-voix SuperWhisper V6 - VERSION FONCTIONNELLE\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\nBasé sur:\n- Transmission coordinateur 10/06/2025 (TTS validé)\n- Journal développement Phase 3 TTS (performance exceptionnelle)\n- Architecture réelle du projet SuperWhisper V6\n\nTest interactif complet: STT → LLM → TTS → Audio avec validation humaine\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 282,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "time",
        "json",
        "asyncio",
        "argparse",
        "datetime",
        "pathlib",
        "typing",
        "numpy",
        "sounddevice",
        "torch",
        "win32com.client",
        "tempfile",
        "wave",
        "traceback"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "validate_rtx3090_configuration",
        "_to_int16",
        "_write_log",
        "__init__"
      ],
      "score_utilite": 50
    },
    {
      "nom": "auto_fix_new_scripts.py",
      "path": "automation\\auto_fix_new_scripts.py",
      "type": "cli_tool",
      "description": "\n🔄 Auto-Fix Nouveaux Scripts - SuperWhisper V6\n\nSurveille et rend automatiquement portables les nouveaux scripts Python\ncréés dans le projet, avec intégration Git hooks et surveillance continue.\n\nUsage:\n    python tools/auto_fix_new_scripts.py --watch          # Surveillance continue\n    python tools/auto_fix_new_scripts.py --git-hook       # Installation Git hook\n    python tools/auto_fix_new_scripts.py --fix-recent     # Fix scripts récents (24h)\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 196,
      "dependances": [
        "os",
        "sys",
        "time",
        "pathlib",
        "subprocess",
        "argparse",
        "json",
        "datetime",
        "typing",
        "watchdog.observers",
        "watchdog.events"
      ],
      "fonctions_principales": [
        "watch_directory",
        "install_git_hook",
        "fix_recent_scripts",
        "fix_staged_files",
        "main"
      ],
      "score_utilite": 48
    },
    {
      "nom": "test_pipeline_voice_validation_final.py",
      "path": "testing\\test_pipeline_voice_validation_final.py",
      "type": "cli_tool",
      "description": "\nTest de validation pipeline voix-à-voix SuperWhisper V6 - AVEC TTS RÉEL VALIDÉ\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\nUtilise le modèle TTS validé fr_FR-siwis-medium.onnx disponible dans D:\\TTS_Voices\\piper\nBasé sur la transmission du coordinateur du 10/06/2025 - TTS déjà validé\n\nTest interactif complet: STT → LLM → TTS → Audio avec validation humaine\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 347,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "time",
        "json",
        "asyncio",
        "argparse",
        "datetime",
        "pathlib",
        "typing",
        "numpy",
        "sounddevice",
        "torch",
        "tempfile",
        "wave",
        "subprocess",
        "uuid",
        "traceback",
        "traceback",
        "time"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "validate_rtx3090_configuration",
        "_to_int16",
        "_write_log",
        "__init__"
      ],
      "score_utilite": 48
    },
    {
      "nom": "promote_test.py",
      "path": "promotion\\promote_test.py",
      "type": "cli_tool",
      "description": "\n🚀 Script de Promotion de Tests - SuperWhisper V6\n\nUtilitaire pour promouvoir des tests depuis répertoires temporaires\nvers répertoires stables (unit/ ou integration/).\n\nUsage:\n    python tools/promote_test.py .cursor-tmp/scratch_test.py tests/unit/\n    python tools/promote_test.py tests/sandbox/experiment.py tests/integration/\n    python tools/promote_test.py .cursor-tmp/temp_stt.py tests/unit/ --rename=test_stt_optimized.py\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 214,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "shutil",
        "pathlib",
        "argparse",
        "datetime"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "validate_source_file",
        "validate_target_dir",
        "generate_target_filename",
        "update_test_header"
      ],
      "score_utilite": 44
    },
    {
      "nom": "clean_sandbox.py",
      "path": "sandbox\\clean_sandbox.py",
      "type": "cli_tool",
      "description": "\n🧹 Script de Purge Automatique - Tests Sandbox SuperWhisper V6\n\nSupprime automatiquement les tests exploratoires vieux de plus de 7 jours\ndans les répertoires sandbox pour maintenir la propreté du dépôt.\n\nUsage:\n    python tools/clean_sandbox.py              # Purge automatique\n    python tools/clean_sandbox.py --dry-run    # Simulation sans suppression\n    python tools/clean_sandbox.py --days=14    # Seuil personnalisé (14 jours)\n    python tools/clean_sandbox.py --force      # Purge tout sans confirmation\n\nRépertoires surveillés:\n    - tests/sandbox/\n    - PIPELINE/tests/sandbox/\n    - .cursor-tmp/\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 194,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "time",
        "pathlib",
        "shutil",
        "argparse",
        "datetime",
        "typing"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "get_file_age_days",
        "find_old_files",
        "clean_pycache",
        "clean_sandbox_directory"
      ],
      "score_utilite": 42
    },
    {
      "nom": "demo_improvements.py",
      "path": "demo\\demo_improvements.py",
      "type": "utility",
      "description": "\nScript de Validation Complète - Luxa SuperWhisper V6\n===================================================\n\nDémonstrateur des améliorations de sécurité, robustesse et performance.\nCe script illustre toutes les corrections apportées suite au peer review.\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 319,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "asyncio",
        "numpy",
        "time",
        "json",
        "logging",
        "pathlib",
        "sys",
        "config.security_config",
        "utils.error_handler",
        "Orchestrator.master_handler_robust",
        "shutil",
        "traceback"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "format",
        "__init__",
        "demo_api_key_management",
        "demo_input_validation"
      ],
      "score_utilite": 41
    },
    {
      "nom": "memory_leak_v4.py",
      "path": "memory\\memory_leak_v4.py",
      "type": "cli_tool",
      "description": "Outil cli_tool",
      "complexite": 523,
      "dependances": [
        "os",
        "sys",
        "torch",
        "gc",
        "threading",
        "contextlib",
        "functools",
        "signal",
        "typing",
        "time",
        "traceback",
        "platform",
        "json",
        "datetime",
        "multiprocessing",
        "multiprocessing",
        "tempfile",
        "pathlib",
        "errno",
        "fcntl",
        "sys"
      ],
      "fonctions_principales": [
        "get_process_manager",
        "gpu_test_cleanup",
        "gpu_memory_monitor",
        "validate_no_memory_leak",
        "emergency_gpu_reset"
      ],
      "score_utilite": 40
    },
    {
      "nom": "install_phase3_dependencies.py",
      "path": "installation\\install_phase3_dependencies.py",
      "type": "test_script",
      "description": "\nInstallation des Dépendances Phase 3 - SuperWhisper V6 TTS\nInstallation automatique du binding Python Piper et autres optimisations\n🚀 Prérequis pour les optimisations de performance\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 261,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "subprocess",
        "logging",
        "pathlib",
        "pip",
        "torch",
        "piper",
        "TTS.utils_audio"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "main",
        "__init__",
        "run_installation",
        "_check_environment"
      ],
      "score_utilite": 38
    },
    {
      "nom": "solution_memory_leak_gpu_v3_stable.py",
      "path": "solutions\\solution_memory_leak_gpu_v3_stable.py",
      "type": "test_script",
      "description": "\nSOLUTION MEMORY LEAK GPU V3 - SuperWhisper V6 [STABLE WINDOWS]\n🚨 CONFIGURATION: RTX 3090 CUDA:1 - Version simplifiée sans blocages\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 208,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "torch",
        "gc",
        "threading",
        "contextlib",
        "functools",
        "typing",
        "time",
        "traceback"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "gpu_test_cleanup",
        "validate_no_memory_leak",
        "emergency_gpu_reset",
        "test_simple_model"
      ],
      "score_utilite": 38
    },
    {
      "nom": "validate_gpu_config.py",
      "path": "validation\\validate_gpu_config.py",
      "type": "test_script",
      "description": "\nValidateur de Configuration GPU - Luxa SuperWhisper V6 [VERSION RENFORCÉE]\n==========================================================================\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\nValide que tous les scripts du projet respectent les règles GPU obligatoires.\nBasé sur les leçons du triple contrôle de sécurité GPU.\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 392,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "re",
        "json",
        "yaml",
        "pathlib",
        "typing",
        "torch"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "validate_rtx3090_configuration",
        "main",
        "__init__",
        "validate_project"
      ],
      "score_utilite": 38
    },
    {
      "nom": "run_assistant.py",
      "path": "testing\\run_assistant.py",
      "type": "cli_tool",
      "description": "\nLuxa - SuperWhisper_V6 Assistant v1.1\n======================================\n\nAssistant vocal intelligent avec pipeline STT → LLM → TTS\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 230,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "argparse",
        "asyncio",
        "os",
        "sys",
        "time",
        "logging",
        "pathlib",
        "yaml",
        "STT.stt_manager_robust",
        "STT.vad_manager",
        "LLM.llm_manager_enhanced",
        "TTS.tts_handler",
        "Orchestrator.master_handler_robust",
        "numpy"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "parse_arguments",
        "print_banner"
      ],
      "score_utilite": 36
    },
    {
      "nom": "test_stt_validation_transmission.py",
      "path": "testing\\stt\\test_stt_validation_transmission.py",
      "type": "test_script",
      "description": "\nTest de validation STT basé sur la transmission du coordinateur du 10 juin 2025\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\nSpécifications STT de la transmission:\n- Moteur principal: insanely-fast-whisper\n- Fallback: faster-whisper  \n- VAD: Silero VAD avec fallback WebRTC\n- Objectif latence: < 500ms\n- Précision: > 95%\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 325,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "time",
        "json",
        "asyncio",
        "datetime",
        "pathlib",
        "typing",
        "numpy",
        "sounddevice",
        "torch"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "validate_rtx3090_configuration",
        "__init__",
        "validate_gpu_configuration",
        "validate_audio_devices"
      ],
      "score_utilite": 36
    },
    {
      "nom": "test_stt_validation_individual.py",
      "path": "testing\\stt\\test_stt_validation_individual.py",
      "type": "test_script",
      "description": "\nTest de validation STT individuelle SuperWhisper V6\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\nObjectif: Sélectionner et valider le modèle STT à retenir pour production\nBasé sur Phase 4 STT validée (journal développement 12/06/2025)\n\nTest des modèles STT disponibles avec validation humaine\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 283,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "time",
        "json",
        "asyncio",
        "datetime",
        "pathlib",
        "typing",
        "numpy",
        "sounddevice",
        "torch",
        "STT.unified_stt_manager",
        "STT.backends.prism_stt_backend"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "main",
        "__init__",
        "validate_rtx3090",
        "test_audio_devices"
      ],
      "score_utilite": 34
    },
    {
      "nom": "monitor_phase3.py",
      "path": "monitoring\\monitor_phase3.py",
      "type": "interface_web",
      "description": "\nMonitoring Phase 3 - SuperWhisper V6 TTS\nSurveillance en temps réel des métriques de performance\n🚀 Dashboard des optimisations Phase 3\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 329,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "asyncio",
        "logging",
        "time",
        "json",
        "pathlib",
        "datetime",
        "collections",
        "threading",
        "TTS.tts_manager",
        "TTS.utils_audio",
        "yaml"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "__init__",
        "_estimate_backend_used",
        "_print_live_metrics",
        "_generate_monitoring_report"
      ],
      "score_utilite": 31
    },
    {
      "nom": "demo_security_sprint1.py",
      "path": "demo\\demo_security_sprint1.py",
      "type": "test_script",
      "description": "\nDémonstration Sécurité LUXA SuperWhisper V6 - Sprint 1\nScript de test complet des fonctionnalités sécurisées\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 272,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "asyncio",
        "requests",
        "time",
        "json",
        "pathlib",
        "config.security_config"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "print_section",
        "print_test",
        "test_api_endpoints",
        "test_security_performance"
      ],
      "score_utilite": 30
    },
    {
      "nom": "download_tts_model.py",
      "path": "download\\download_tts_model.py",
      "type": "download",
      "description": "\nScript de téléchargement du modèle TTS fr_FR-siwis-medium.onnx\nBasé sur la transmission du coordinateur du 10 juin 2025\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 123,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "requests",
        "pathlib",
        "urllib.parse",
        "shutil",
        "shutil",
        "traceback"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "download_file",
        "main"
      ],
      "score_utilite": 29
    },
    {
      "nom": "run_assistant_simple.py",
      "path": "testing\\run_assistant_simple.py",
      "type": "utility",
      "description": "\nScript Portable - run_assistant_simple.py\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 84,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "yaml",
        "os",
        "sys",
        "asyncio",
        "STT.stt_handler",
        "LLM.llm_manager_enhanced",
        "TTS.tts_handler"
      ],
      "fonctions_principales": [
        "_setup_portable_environment"
      ],
      "score_utilite": 27
    },
    {
      "nom": "convertir_fichiers_pcm_wav.py",
      "path": "conversion\\convertir_fichiers_pcm_wav.py",
      "type": "test_script",
      "description": "\nConversion fichiers PCM → WAV - SuperWhisper V6 TTS\nConvertit tous les fichiers audio invalides en format WAV standard\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 223,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "pathlib",
        "shutil",
        "TTS.utils_audio"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "convertir_fichiers_pcm_wav",
        "tester_fichiers_convertis",
        "convertir_fichier_principal"
      ],
      "score_utilite": 26
    },
    {
      "nom": "test_tts_validation_transmission.py",
      "path": "testing\\stt\\test_tts_validation_transmission.py",
      "type": "test_script",
      "description": "\nTest de validation TTS basé sur la transmission du coordinateur du 10 juin 2025\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 149,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "pathlib",
        "yaml",
        "json",
        "TTS.tts_handler",
        "torch",
        "traceback"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "validate_rtx3090_configuration",
        "test_tts_transmission_validation",
        "main"
      ],
      "score_utilite": 26
    },
    {
      "nom": "explore_piper_api.py",
      "path": "exploration\\explore_piper_api.py",
      "type": "test_script",
      "description": "\nExploration de l'API Piper pour découvrir la bonne utilisation\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 110,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "importlib",
        "pkgutil",
        "subprocess",
        "os",
        "piper",
        "os",
        "traceback"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "explore_piper",
        "test_piper_cli"
      ],
      "score_utilite": 24
    },
    {
      "nom": "resume_tests_validation_complexes.py",
      "path": "resume\\resume_tests_validation_complexes.py",
      "type": "test_script",
      "description": "\nRésumé final des tests validation complexes - SuperWhisper V6 TTS\nAnalyse et présente tous les fichiers générés avec leurs caractéristiques\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 143,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "pathlib",
        "TTS.utils_audio"
      ],
      "fonctions_principales": [
        "_setup_portable_environment",
        "analyser_fichiers_validation"
      ],
      "score_utilite": 22
    },
    {
      "nom": "generer_fichier_complet_optimise.py",
      "path": "generation\\generer_fichier_complet_optimise.py",
      "type": "test_script",
      "description": "\nGénération fichier complet optimisé - SuperWhisper V6 TTS\nContourne la limitation de 1000 caractères en utilisant SAPI directement\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 101,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "asyncio",
        "yaml",
        "time",
        "pathlib",
        "TTS.tts_manager",
        "TTS.utils_audio"
      ],
      "fonctions_principales": [
        "_setup_portable_environment"
      ],
      "score_utilite": 20
    },
    {
      "nom": "generer_tests_validation_complexes.py",
      "path": "generation\\generer_tests_validation_complexes.py",
      "type": "test_script",
      "description": "\nGénération tests validation complexes - SuperWhisper V6 TTS\nGénère des fichiers audio avec textes de validation de complexité croissante\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 233,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "asyncio",
        "yaml",
        "time",
        "pathlib",
        "TTS.tts_manager",
        "TTS.utils_audio",
        "TTS.tts_manager"
      ],
      "fonctions_principales": [
        "_setup_portable_environment"
      ],
      "score_utilite": 20
    },
    {
      "nom": "monitor_phase3_demo.py",
      "path": "monitoring\\monitor_phase3_demo.py",
      "type": "test_script",
      "description": "\nMonitoring Phase 3 DEMO - SuperWhisper V6 TTS\nDémonstration courte (1 minute) du monitoring en temps réel\n🚀 Validation rapide des optimisations Phase 3\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 164,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "asyncio",
        "logging",
        "time",
        "json",
        "pathlib",
        "datetime",
        "collections",
        "TTS.tts_manager",
        "yaml"
      ],
      "fonctions_principales": [
        "_setup_portable_environment"
      ],
      "score_utilite": 20
    },
    {
      "nom": "run_assistant_coqui.py",
      "path": "testing\\run_assistant_coqui.py",
      "type": "test_script",
      "description": "\nScript Portable - run_assistant_coqui.py\n\n🚨 CONFIGURATION GPU: RTX 3090 (CUDA:1) OBLIGATOIRE\n",
      "complexite": 82,
      "dependances": [
        "os",
        "sys",
        "pathlib",
        "yaml",
        "os",
        "sys",
        "asyncio",
        "STT.stt_handler",
        "LLM.llm_manager_enhanced",
        "LUXA_TTS.tts_handler_coqui"
      ],
      "fonctions_principales": [
        "_setup_portable_environment"
      ],
      "score_utilite": 20
    }
  ],
  "metriques": {
    "structure": {
      "repertoires_total": 19,
      "fichiers_total": 38,
      "taille_totale_mb": 0.45,
      "types_fichiers": 3
    },
    "python": {
      "fichiers_python": 29,
      "lignes_code_total": 7055,
      "fonctions_total": 217,
      "classes_total": 29
    },
    "outils": {
      "outils_detectes": 29,
      "types_outils": 5,
      "score_utilite_moyen": 35.45
    },
    "dependances": {
      "total": 54,
      "standard": [
        "argparse",
        "pathlib",
        "json",
        "contextlib",
        "functools",
        "os",
        "subprocess",
        "time",
        "collections",
        "re",
        "multiprocessing",
        "urllib.parse",
        "typing",
        "logging",
        "threading",
        "datetime",
        "asyncio",
        "sys"
      ],
      "externes": [
        "numpy",
        "requests"
      ],
      "inconnues": [
        "Orchestrator.master_handler_robust",
        "shutil",
        "sounddevice",
        "watchdog.observers",
        "yaml",
        "STT.backends.prism_stt_backend",
        "watchdog.events",
        "gc",
        "uuid",
        "fcntl",
        "tts_handler",
        "TTS.tts_manager",
        "utils.error_handler",
        "traceback",
        "STT.vad_manager",
        "STT.stt_manager_robust",
        "torch",
        "STT.stt_handler",
        "win32com.client",
        "LLM.llm_manager_enhanced",
        "pip",
        "config.security_config",
        "piper",
        "pkgutil",
        "tempfile",
        "importlib",
        "TTS.utils_audio",
        "STT.unified_stt_manager",
        "LUXA_TTS.tts_handler_coqui",
        "TTS.tts_handler",
        "wave",
        "signal",
        "platform",
        "errno"
      ]
    }
  },
  "tools_count": 29,
  "recommendations": [
    "Trouv 29 outils potentiels",
    "Types d'outils les plus frquents: test_script(14), cli_tool(11), utility(2)",
    "Dpendances externes  vrifier: 2",
    "Prioriser les outils avec score_utilite > 15"
  ]
}